ifelse(stock_code=='LRW', "Lewis River Wild",
ifelse(stock_code=='LYF', "Lyons Ferry Fingerling",
ifelse(stock_code=='LYY', "Lyons Ferry Yearling",
ifelse(stock_code=='MSH', "Middle Shuswap",
ifelse(stock_code=='NIC', "Nicola",
ifelse(stock_code=='NIS', "Nisqually Fall Fingerling",
ifelse(stock_code=='NSA', "Northern Southeast Alaska",
ifelse(stock_code=='NSF', "Nooksack Spring Fingerling",
ifelse(stock_code=='PHI', "Phillips River Fall",
ifelse(stock_code=='PPS', "Puntledge River Summer",
ifelse(stock_code=='QUE', "Queets Fall Fingerling",
ifelse(stock_code=='QUI', "Quinsam River Fall ",
ifelse(stock_code=='RBT', "Robertson Creek Fall",
ifelse(stock_code=='SAM', "Samish Fall Fingerling",
ifelse(stock_code=='SHU', "Lower Shuswap River Summer",
ifelse(stock_code=='SKF', "Skagit Spring Fingerling",
ifelse(stock_code=='SKY', "Skykomish Fall Fingerling",
ifelse(stock_code=='SMK', "Similkameen Summer Yearling",
ifelse(stock_code=='SOO', "Tsoo-Yess Fall Fingerling",
ifelse(stock_code=='SPR', "Spring Creek Tule",
ifelse(stock_code=='SPS', "South Puget Sound Fall Fingerling",
ifelse(stock_code=='SRH', "Salmon River",
ifelse(stock_code=='SSA', "Southern SEAK Spring",
ifelse(stock_code=='SSF', "Skagit Summer Fingerling",
ifelse(stock_code=='STL', "Stillaguamish Fall Fingerling² ",
ifelse(stock_code=='SUM', "Columbia River Summers",
ifelse(stock_code=='URB', "Columbia Upriver Bright",
ifelse(stock_code=='WSH', "Willamette Spring",1))))))))))))))))))))))))))))))))))))))))))))
library(dplyr)
library(reshape2)
library(bayesdfa)
library(MCMCvis)
library(ggplot2)
library(stringr)
library(ggpubr)
library(tidyverse)
library(dplyr)
dat<- readRDS("data/all_juvenile_indices.rds")
dat<- read.csv("data/salmon/MatRate_Survival_up to CY 2021_new.csv")
Indicator_ID<-data.frame(stock_code=unique(dat$stock_code))
Indicator_ID%>%mutate(stock_name=ifelse(stock_code=='ATN', "Atnarko",
ifelse(stock_code=='BQR', "Big Qualicum River Fall",
ifelse(stock_code=='CHI', "Chilliwack River Fall",
ifelse(stock_code=='COW', "Cowichan River Fall",
ifelse(stock_code=='CWF', "Cowlitz Fall Tule",
ifelse(stock_code=='ELK', "Elk River",
ifelse(stock_code=='ELW', "Elwha River",
ifelse(stock_code=='GAD', "George Adams Fall Fingerling",
ifelse(stock_code=='GRN', "Green River Fingerling",
ifelse(stock_code=='HAN', "Hanford Wild Brights",
ifelse(stock_code=='HAR', "Harrison River",
ifelse(stock_code=='HOK', "Hoko Fall Fingerling",
ifelse(stock_code=='KLM', "Kitsumkalum River Summer",
ifelse(stock_code=='KLY', "Kitsumkalum Yearling",
ifelse(stock_code=='LRH', "Columbia Lower River Hatchery",
ifelse(stock_code=='LRW', "Lewis River Wild",
ifelse(stock_code=='LYF', "Lyons Ferry Fingerling",
ifelse(stock_code=='LYY', "Lyons Ferry Yearling",
ifelse(stock_code=='MSH', "Middle Shuswap",
ifelse(stock_code=='NIC', "Nicola",
ifelse(stock_code=='NIS', "Nisqually Fall Fingerling",
ifelse(stock_code=='NSA', "Northern Southeast Alaska",
ifelse(stock_code=='NSF', "Nooksack Spring Fingerling",
ifelse(stock_code=='PHI', "Phillips River Fall",
ifelse(stock_code=='PPS', "Puntledge River Summer",
ifelse(stock_code=='QUE', "Queets Fall Fingerling",
ifelse(stock_code=='QUI', "Quinsam River Fall ",
ifelse(stock_code=='RBT', "Robertson Creek Fall",
ifelse(stock_code=='SAM', "Samish Fall Fingerling",
ifelse(stock_code=='SHU', "Lower Shuswap River Summer",
ifelse(stock_code=='SKF', "Skagit Spring Fingerling",
ifelse(stock_code=='SKY', "Skykomish Fall Fingerling",
ifelse(stock_code=='SMK', "Similkameen Summer Yearling",
ifelse(stock_code=='SOO', "Tsoo-Yess Fall Fingerling",
ifelse(stock_code=='SPR', "Spring Creek Tule",
ifelse(stock_code=='SPS', "South Puget Sound Fall Fingerling",
ifelse(stock_code=='SRH', "Salmon River",
ifelse(stock_code=='SSA', "Southern SEAK Spring",
ifelse(stock_code=='SSF', "Skagit Summer Fingerling",
ifelse(stock_code=='STL', "Stillaguamish Fall Fingerling² ",
ifelse(stock_code=='SUM', "Columbia River Summers",
ifelse(stock_code=='URB', "Columbia Upriver Bright",
ifelse(stock_code=='WSH', "Willamette Spring",1))))))))))))))))))))))))))))))))))))))))))))
Indicator_ID%>%mutate(area=ifelse(stock_code=='NSA'|stock_code=='SSA'|stock_code=='CHK'|stock_code=='UNU', "Southeast Alaska",
ifelse(stock_code=='TST', "Transboundary Rivers",
ifelse(stock_code=='ATN'|stock_code=='KLM'|stock_code=='KLY', "North/Central BC",
ifelse(stock_code=='RBT', "WCVI",
ifelse(stock_code=='QUI'|stock_code=='PHI'|stock_code=='PPS'|stock_code=='BQR'|stock_code=='COW', "Strait of Georgia",
ifelse(stock_code=='HAR'|stock_code=='CHI'|stock_code=='CKO'|stock_code=='NIC'|stock_code=='SHU'|stock_code=='MSH', "Fraser River",
ifelse(stock_code=='NSF'|stock_code=='SAM'|stock_code=='SSF'|stock_code=='SKF', "North Puget Sound",
ifelse(stock_code=='STL'|stock_code=='SKY', "Central Puget Sound",
ifelse(stock_code=='NIS'|stock_code=='SPS'|stock_code=='GRN', "South Puget Sound",
ifelse(stock_code=='GAD', "Hood Canal",
ifelse(stock_code=='ELW', "Juan de Fuca",
ifelse(stock_code=='HOK'|stock_code=='QUE'|stock_code=='SOO', "North Washington Coast",
ifelse(stock_code=='LRH'|stock_code=='CWF'|stock_code=='LRW'|stock_code=='WSH'|stock_code=='SPR', "Lower Columbia River",
ifelse(stock_code=='HAN'|stock_code=='SMK'|stock_code=='SUM'|stock_code=='URB', "Upper Columbia River",
ifelse(stock_code=='LYF'|stock_code=='LYY', "Snake River",
ifelse(stock_code=='SRH', "North Oregon Coast",
ifelse(stock_code=='ELK', "Mid Oregon Coast",1))))))))))))))))))
read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_45N.csv')
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_38N.csv')%>%add_column(location='38'))%>%
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_35N.csv')%>%add_column(location='35'))
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_38N.csv')%>%add_column(location='38N'))%>%
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_33N.csv')%>%add_column(location='33N'))
Beuti%>%
add_column('Year'=as.numeric(format(as.Date(Beuti$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(Beuti$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(Beuti$time),"%d")))
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_38N.csv')%>%add_column(location='38N'))%>%
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_33N.csv')%>%add_column(location='33N'))
Beuti%>%
add_column('Year'=as.numeric(format(as.Date(Beuti$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(Beuti$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(Beuti$time),"%d")))
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_38N.csv')%>%add_column(location='38N'))%>%
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_33N.csv')%>%add_column(location='33N'))
Beuti%>%
add_column('Year'=as.numeric(format(as.Date(Beuti$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(Beuti$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(Beuti$time),"%d")))
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_38N.csv')%>%add_column(location='38N'))%>%
bind_rows(read.csv('data/Environment/CUTI_BEUTI/cciea_OC_BEUTI_33N.csv')%>%add_column(location='33N'))
Survival_combined
Survival_combined<- read.csv("data/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')
library(dplyr)
library(reshape2)
library(bayesdfa)
library(MCMCvis)
library(ggplot2)
library(stringr)
library(ggpubr)
library(tidyverse)
library(dplyr)
library(mgcv)
library(MASS)
library(stringr)
library(gamm4)
library(tidyr)
library(ggthemes)
library(viridis)
library(cowplot)
library(kableExtra)
library(docxtools)
library(knitr)
library(tibble)
library(gratia)
library(latex2exp)
library(patchwork)
Survival_combined
Survival_combined<- read.csv("data/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')
Survival_combined
#dat<- readRDS("data/all_juvenile_indices.rds")
dat<- read.csv("data/salmon/MatRate_Survival_up to CY 2021_new.csv")%>%
dplyr::select(stock_code, brood_year, age, Mat.Rate, Marine.Survival)
cwt<- read.csv("data/CWTinfo.csv")
dat
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')
unique(Survival_combined$stock_name)
##### Fitting Temporal GAMS #####
dd <- Survival_combined[complete.cases(Survival_combined), ]
dd <-cbind(dd,area1=as.factor(dd$area), season1=as.factor(dd$RunType))
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))
Survival_combined
is.factor(Survival_combined$area)
dplyr::filter(Survival_combined,stock_code=='ATN')
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))%>%
filter(ecoregion==1|ecoregion==2|ecoregion==3|ecoregion==4)
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))%>%
filter(ecoregion==1|ecoregion==2|ecoregion==3|ecoregion==4)%>%
filter(calendar_year>=1988&calendar_year<=2023)
Survival_combined
is.na(Survival_combined)
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season,-X)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))%>%
filter(ecoregion==1|ecoregion==2|ecoregion==3|ecoregion==4)%>%
filter(calendar_year>=1988&calendar_year<=2023)
Survival_combined
table(is.na(Survival_combined))["TRUE"]
table(is.na(Survival_combined))
table(is.na(Survival_combined))["FALSE"]
saveRDS(Survival_combined, file = "data/Salmon/Survival_combined.rds")
head(Survival_combined)
saveRDS(Survival_combined, file = "data/Salmon/Survival_combined.rds")
saveRDS(Survival_combined, file = "data/Salmon/Survival_covariates.rds")
dataInfo <- rerddap::info('ncdc_oisst_v2_avhrr_by_time_zlev_lat_lon')
# NOAA ERSSTv5 (in situ only), 2°, Global, Monthly, 1854-present
dataInfo <- rerddap::info('nceiErsstv5')
dd
library(dplyr)
library(reshape2)
library(bayesdfa)
library(dplyr)
library(reshape2)
library(bayesdfa)
library(MCMCvis)
library(ggplot2)
library(stringr)
library(ggpubr)
library(tidyverse)
library(dplyr)
library(mgcv)
library(MASS)
library(stringr)
library(gamm4)
library(tidyr)
library(ggthemes)
library(viridis)
library(cowplot)
library(kableExtra)
library(docxtools)
library(knitr)
library(tibble)
library(gratia)
library(latex2exp)
library(patchwork)
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season,-X)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))%>%
filter(ecoregion==1|ecoregion==2|ecoregion==3|ecoregion==4)%>%
filter(calendar_year>=1988&calendar_year<=2023)
table(is.na(Survival_combined))["FALSE"]
saveRDS(Survival_combined, file = "data/Salmon/Survival_covariates.rds")
##Single smoothed term by year
t1<-gam(Marine.Survival ~ s(calendar_year, k=6),
data=dd, method="REML")
#smoothed term by year for each region (unshared)
t2<-gam(Marine.Survival ~s(calendar_year, by=area1,k=6),
data=dd, method="REML")
#smoothed term by year with random effect smoothed term
t3<-gam(Marine.Survival ~ s(calendar_year, k=6, m=2)+
s(calendar_year, area1, k=6, bs="fs", m=2),
data=dd, method="REML")
Survival_combined<- read.csv("data/Salmon/Survival_combined.csv")%>%
dplyr::select(-Mat.Rate,-season,-X)%>%
dplyr::filter(stock_code!='IGHY'&stock_code!='TRHY')%>%
mutate(area=as.factor(area), RunType=as.factor(RunType))%>%
filter(ecoregion==1|ecoregion==2|ecoregion==3|ecoregion==4)%>%
filter(calendar_year>=1988&calendar_year<=2023)
table(is.na(Survival_combined))["FALSE"]
saveRDS(Survival_combined, file = "data/Salmon/Survival_covariates.rds")
surv <-readRDS("data/Salmon/Survival_covariates.rds")
surv
surv.dat <-readRDS("data/Salmon/Survival_covariates.rds")
colnames(surv.dat)
dplyr::group_by(surv.dat, brood_year, stock_name)
# Pivot the dataframe wider
df_wider <- surv.dat %>%filter(stock_name=="Atnarko")
# Pivot the dataframe wider
df_wider <- surv.dat %>%filter(stock_name=="Atnarko")%>%
pivot_wider(names_from = brood_year, values_from = Marine.Survival,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
df_wider
# Pivot the dataframe wider
df_wider <- surv.dat %>%filter(stock_name=="Atnarko")%>%
select(Marine.Survival, brood_year)%>%
pivot_wider(names_from = brood_year, values_from = Marine.Survival,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
surv.dat %>%filter(stock_name=="Atnarko")%>%
select(Marine.Survival, brood_year)
surv.dat %>%filter(stock_name=="Atnarko")%>%
select(Marine.Survival, brood_year)
surv.dat %>%filter(stock_name=="Atnarko")
surv.dat %>%filter(stock_name=="Atnarko")%>%
select(Marine.Survival, brood_year)
# Pivot the dataframe wider
df_wider <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year)%>%
pivot_wider(names_from = brood_year, values_from = Marine.Survival,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
df_wider
# Pivot the dataframe wider
df_wider <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year)%>%
pivot_wider(names_from = brood_year, values_from = Marine.Survival,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
years <- surv.dat %>%filter(stock_name=="Atnarko")%>%slect(brood_year)
years <- surv.dat %>%filter(stock_name=="Atnarko")%>%dplyr::select(brood_year)
years
## number of years of data
TT <- length(years)
# Pivot the dataframe wider
dat <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year)%>%
pivot_wider(names_from = brood_year, values_from = Marine.Survival,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
surv.dat
# Pivot the dataframe wider
dat <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)%>%
pivot_wider(names_from = brood_year
values_fill = list(Marine.Survival = NA)) %>%
# Pivot the dataframe wider
dat <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)%>%
pivot_wider(names_from = brood_year,
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
# Pivot the dataframe wider
dat <- surv.dat %>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)%>%
pivot_wider(names_from = brood_year, values_fill = c(Marine.Survival, Beuti_spring),
values_fill = list(Marine.Survival = NA)) %>%
as.data.frame()
data(SalmonSurvCUI, package = "MARSS")
data(SalmonSurvCUI, package = "MARSS")
SalmonSurvCUI
# Pivot the dataframe wider
SalmonSurvCUI<- SalmonSurvCUI%>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)#%>%
SalmonSurvCUI <-readRDS("data/Salmon/Survival_covariates.rds")
# Pivot the dataframe wider
SalmonSurvCUI<- SalmonSurvCUI%>%filter(stock_name=="Atnarko")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)#%>%
SalmonSurvCUI
## get time indices
years <- SalmonSurvCUI[, 2]
years
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(SalmonSurvCUI[, 1], nrow = 1)
dat
beuti <- matrix(SalmonSurvCUI[, 3], nrow = 1)
## get time indices
years <- SalmonSurvCUI[, 2]
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(SalmonSurvCUI[, 1], nrow = 1)
#get predictor
beuti <- matrix(SalmonSurvCUI[, 3], nrow = 1)
##get time indices
m <- dim(beuti)[1] + 1
m
## for process eqn
B <- diag(m)  ## 2x2; Identity
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c("q.alpha", "q.beta")  ## 2x2; diag = (q1,q2)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- CUI_z  ## Nx1; predictor variable
A <- matrix(0)  ## 1x1; scalar = 0
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- beuti  ## Nx1; predictor variable
A <- matrix(0)  ## 1x1; scalar = 0
R <- matrix("r")  ## 1x1; scalar = r
## only need starting values for regr parameters
inits_list <- list(x0 = matrix(c(0, 0), nrow = m))
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
dlm_1 <- MARSS(dat, inits = inits_list, model = mod_list)
library(MARSS)
## fit univariate DLM
dlm_1 <- MARSS(dat, inits = inits_list, model = mod_list)
## fit univariate DLM
dlm_1 <- MARSS(dat, inits = inits_list, model = mod_list)
## get response variable: logit(survival)
dat <- matrix(scale(SalmonSurvCUI[, 1]), nrow = 1)
dat
## get response variable: logit(survival)
dat <- matrix(scale(SalmonSurvCUI[, 1]), nrow = 1)
#get predictor
beuti <- matrix(SalmonSurvCUI[, 3], nrow = 1)
##get time indices
m <- dim(beuti)[1] + 1
## for process eqn
B <- diag(m)  ## 2x2; Identity
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c("q.alpha", "q.beta")  ## 2x2; diag = (q1,q2)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- beuti  ## Nx1; predictor variable
A <- matrix(0)  ## 1x1; scalar = 0
R <- matrix("r")  ## 1x1; scalar = r
## only need starting values for regr parameters
inits_list <- list(x0 = matrix(c(0, 0), nrow = m))
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
dlm_1 <- MARSS(dat, inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- c(fit_2$states[1,1],
fit_2$states[1,-1] - fit_2$states[2,length(exp_dat)])
## fit univariate DLM
fit_2 <- MARSS(dat, inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- c(fit_2$states[1,1],
fit_2$states[1,-1] - fit_2$states[2,length(exp_dat)])
## get estimates of eta
eta_hat <- fit_2$states[2,]
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## get estimates of alpha
alpha_hat <- c(fit_2$states[1,1],
fit_2$states[1,-1] - fit_2$states[2,length(dat)])
## get estimates of eta
eta_hat <- fit_2$states[2,]
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(eta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(eta[t]))
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(eta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
## get estimates of eta
beta_hat <- fit_2$states[2,]
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(eta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
Z
SalmonSurv <-readRDS("data/Salmon/Survival_covariates.rds")
unique(SalmonSurv$stock_name)
# Pivot the dataframe wider
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Irongate Fall Fingerling")%>%
dplyr::select(Marine.Survival, brood_year, Beuti_spring)#%>%
## get time indices
years <- SalmonSurvCUI[, 2]
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(scale(SalmonSurvCUI[, 1]), nrow = 1)
#get predictor
beuti <- matrix(SalmonSurvCUI[, 3], nrow = 1)
##get time indices
m <- dim(beuti)[1] + 1
## for process eqn
B <- diag(m)  ## 2x2; Identity
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c("q.alpha", "q.beta")  ## 2x2; diag = (q1,q2)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- beuti  ## Nx1; predictor variable
A <- matrix(0)  ## 1x1; scalar = 0
R <- matrix("r")  ## 1x1; scalar = r
## only need starting values for regr parameters
inits_list <- list(x0 = matrix(c(0, 0), nrow = m))
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
fit_2 <- MARSS(dat, inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- c(fit_2$states[1,1],
fit_2$states[1,-1] - fit_2$states[2,length(dat)])
## get estimates of eta
beta_hat <- fit_2$states[2,]
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
