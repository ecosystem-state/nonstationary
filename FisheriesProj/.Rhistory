for (i in (nT-10+1):nT) {
# Update the model to use data up to the current time point
fit <- update(
initial_fit,
newdata = SalmonSurvCUI[1:(i-1), ],
recompile = FALSE,
refresh = 0
)
# Predict the next time point
new_data <- SalmonSurvCUI[i, , drop = FALSE]
pred <- posterior_predict(fit, newdata = new_data)
SalmonSurvCUI$predictions[i - 1] <- mean(pred)
}
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale), data = SalmonSurvCUI,autocor = cor_ar(~ year, p = 1),
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale),autocor = cor_ar(~ year, p = 1), data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
SalmonSurvCUI$predictions <- NA
nT <- nrow(SalmonSurvCUI)
for (i in (nT-10+1):nT) {
# Update the model to use data up to the current time point
fit <- update(
initial_fit,
newdata = SalmonSurvCUI[1:(i-1), ],
recompile = FALSE,
refresh = 0
)
# Predict the next time point
new_data <- SalmonSurvCUI[i, , drop = FALSE]
pred <- posterior_predict(fit, newdata = new_data)
SalmonSurvCUI$predictions[i - 1] <- mean(pred)
}
plot(SalmonSurvCUI$predictions, SalmonSurvCUI$Survival_scale)
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
SalmonSurvCUI$predictions <- NA
nT <- nrow(SalmonSurvCUI)
for (i in (nT-10+1):nT) {
# Update the model to use data up to the current time point
fit <- update(
initial_fit,
newdata = SalmonSurvCUI[1:(i-1), ],
recompile = FALSE,
refresh = 0
)
# Predict the next time point
new_data <- SalmonSurvCUI[i, , drop = FALSE]
pred <- posterior_predict(fit, newdata = new_data)
SalmonSurvCUI$predictions[i - 1] <- mean(pred)
}
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale), autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
summary(initial_fit)
initial_fit
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
unique(SalmonSurv$stock_name) #looking up stock names to pull one out
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Tsoo-Yess Fall Fingerling")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
rename(year=brood_year)%>%
as.data.frame()
initial_fit <- brm(Survival_scale ~ s(year, k=5) + s(year, k=5, by = Beuti_scale), autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
SalmonSurv <- readRDS("data/Salmon/Survival_covariates.rds")
SalmonSurvCUI<- SalmonSurv%>%#filter(stock_name=="Tsoo-Yess Fall Fingerling")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale)+stock_name, autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
SalmonSurvCUI
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
summary(initial_fit)
initial_fit
# evaluate fit
pred <- predict(initial_fit)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
initial_fit <- brm(Survival_scale ~ s(year, by=stock_name, k=8) + s(year, k=8, by = c(Beuti_scale, stock_name)), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, by=stock_name, k=8) + s(year, k=8, by = Beuti_scale*stock_name), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, by=stock_name, k=8) + s(year, k=8, by = Beuti_scale*stock_name), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, stock_name, k=8) + s(year, stock_name, k=8, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Tsoo-Yess Fall Fingerling")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
summary(initial_fit)
initial_fit
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
SalmonSurv <- readRDS("data/Salmon/Survival_covariates.rds")
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Tsoo-Yess Fall Fingerling")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), #autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
summary(initial_fit)
initial_fit
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(year, k=8, by = Beuti_scale), #
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
?brmsformula
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
SalmonSurvCUI$predictions <- NA
nT <- nrow(SalmonSurvCUI)
for (i in (nT-10+1):nT) {
# Update the model to use data up to the current time point
fit <- update(
initial_fit,
newdata = SalmonSurvCUI[1:(i-1), ],
recompile = FALSE,
refresh = 0
)
# Predict the next time point
new_data <- SalmonSurvCUI[i, , drop = FALSE]
pred <- posterior_predict(fit, newdata = new_data)
SalmonSurvCUI$predictions[i - 1] <- mean(pred)
}
plot(SalmonSurvCUI$predictions, SalmonSurvCUI$Survival_scale)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(Beuti_scale, k=8, by =year),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 4)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(Beuti_scale, k=8, by =year),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 3)
summary(initial_fit)
initial_fit
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
unique(SalmonSurv$stock_name)
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Harrison River")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
unique(SalmonSurv$stock_name)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(Beuti_scale, k=8, by =year),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=0.99), iter = 3000, cores=4,chains = 3)
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
summary(initial_fit)
initial_fit
plot.gam(initial_fit)
library(brms)
library(ggplot2)
library(dplyr)
library(MARSS)
library(ggplot2)
library(broom.mixed)
library(bayesdfa)
library(MCMCvis)
install.packages("MCMCvis")
library(tidyverse)
library(dplyr)
library(mgcv)
library(MASS)
library(stringr)
library(gamm4)
install.packages("gamm4")
library(tidyr)
library(ggthemes)
plot.gam(initial_fit)
draw(initial_fit)
library(mgcv)
draw(initial_fit)
library(brms)
plot(marginal_smooths(initial_fit))
SalmonSurvCUI
pp_check(initial_fit, type = "ecdf_overlay")
plot(marginal_smooths(initial_fit))
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
plot(marginal_effects(initial_fit))
plot(marginal_smooths(initial_fit))
plot(marginal_effects(initial_fit))
marginal_effects(initial_fit
marginal_effects(initial_fit)
marginal_effects(initial_fit)
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(Beuti_scale, k=8, by =year),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
unique(SalmonSurv$stock_name)
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Columbia River Summers")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
unique(SalmonSurv$stock_name)
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
adapt_d <- 0.99
initial_fit <- brm(Survival_scale ~ s(year, k=8) + s(Beuti_scale, k=8, by =year),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
summary(initial_fit)
plot(marginal_effects(initial_fit))
plot(marginal_effects(initial_fit))
SalmonSurv
SalmonSurvCUI<- SalmonSurv%>%#filter(stock_name=="Columbia River Summers")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, stock_name, RunType)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
unique(SalmonSurv$stock_name)
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
adapt_d <- 0.99
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType, k=4, bs="fs", m=2),,
autocor = cor_ar(~ year, p = 1),
data = SalmonSur,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType, k=4, bs="fs", m=2),,
autocor = cor_ar(~ year, p = 1),
data = SalmonSurv,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType, k=4, bs="fs", m=2),,
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType, k=4, bs="fs", m=2),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
SalmonSurvCUI
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
#s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
#s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
plot(marginal_effects(initial_fit))
SalmonSurvCUI
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by =c(year, RunType))+
#s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by = list(year, RunType))+
#s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by = c(year, RunType)),
#s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
initial_fit <- brm(Survival_scale ~ s(year, k=8) +
s(Beuti_scale, k=8, by = list(year, RunType)),
#s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
min(SalmonSurvCUI$Survival_scale)
initial_fit <- brm(Survival_scale ~ s(year,m=2, k=8) +
#s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, RunType,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
summary(initial_fit)
plot(marginal_effects(initial_fit))
plot(marginal_smooths(initial_fit))
SalmonSurv
SalmonSurvCUI<- SalmonSurv%>%#filter(stock_name=="Columbia River Summers")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, area,stock_name, RunType)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
unique(SalmonSurv$stock_name)
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
adapt_d <- 0.99
initial_fit <- brm(Survival_scale ~ s(year,m=2, k=8) + s(year, k=8) +
#s(Beuti_scale, k=8, by =year)+
s(Beuti_spring, area,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
SalmonSurv <- readRDS("data/Salmon/Survival_covariates.rds")
SalmonSurvCUI<- SalmonSurv%>%filter(stock_name=="Columbia River Summers")%>% #grabbing a single stock, I chose at random
dplyr::select(Marine.Survival, brood_year, Beuti_spring, area,stock_name, RunType)%>% #grabbing columns of interest
group_by(stock_name)%>%
mutate(Survival_scale=scale(Marine.Survival), Beuti_scale=scale(Beuti_spring))%>% #making sure data are normalized
ungroup()%>%
rename(year=brood_year)%>%
as.data.frame()
unique(SalmonSurv$stock_name)
# Try GP model -- this works fine, 3 div transitions
# fit <- brm(Survival_scale ~ s(year, bs = "gp", k=5) + s(year, bs = "gp", k=5, by = Beuti_scale), data = SalmonSurvCUI,
#                  control=list(adapt_delta=0.99), iter = 3000, chains = 3)
# This gets down to 1 div transition
max_tree<-11
adapt_d <- 0.99
initial_fit <- brm(Survival_scale ~  s(year, k=8) + #s(year,m=2, k=8) +
s(Beuti_scale, k=8, by =year)+
# s(Beuti_spring, area,by =year, k=8, bs="fs", m=2),
#autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
initial_fit <- brm(Survival_scale ~  s(year, k=8) + #s(year,m=2, k=8) +
s(Beuti_scale, k=8, by =year),
# s(Beuti_spring, area,by =year, k=8, bs="fs", m=2),
autocor = cor_ar(~ year, p = 1),
data = SalmonSurvCUI,
control=list(adapt_delta=adapt_d,max_treedepth=max_tree), iter = 3000, cores=4,chains = 3)
unique(SalmonSurv$RunType)
plot(marginal_smooths(initial_fit))
plot(marginal_effects(initial_fit))
summary(initial_fit)
initial_fit
bayes_R2(initial_fit)
summary(initial_fit)
summ<-summary(initial_fit)
summ$splines
bayes_R2(initial_fit)
# evaluate fit
pred <- predict(initial_fit)
joined <- cbind(SalmonSurvCUI, pred)
ggplot(joined, aes(year, Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5),alpha=0.2) +
geom_line() +
geom_point(aes(year,Survival_scale)) +
ggtitle("Overall fit")
marginal_effects(initial_fit)
summary(marginal_effects(initial_fit))
marginaleffects(initial_fit))
marginaleffects(initial_fit)
marginal_effects(initial_fit)
fit_summary <- summary(initial_fit)
fit_summary$splines
smooth_summary <- fit_summary$spec_pars$smooths
smooth_summary
smooth_summary <- fit_summary$spec_pars
smooth_summary
fit_summary$splines
conditional_effects(initial_fit)
sumary(conditional_effects(initial_fit))
summary(conditional_effects(initial_fit))
conditional_effects(initial_fit)$year
conditions=data.frame(year=c(1990, 2000, 2015))
conditional_effects(initial_fit, conditions = conditions)
conditional_effects(initial_fit, conditions = conditions)
summary(conditional_effects(initial_fit, conditions = conditions)$year)
conditions=data.frame(year=c(1990, 2000, 2015))
conditional_effects(initial_fit, conditions = conditions)
conditional_effects(initial_fit, conditions = conditions)$year
conditional_effects(initial_fit, conditions = conditions)$Beuti_scale
