scale_fill_manual(values=c(col4[3:1],col4[1]), name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~Difference2) +
ylab("Biological Posterior \n Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) +
theme(legend.position="none")
violin.bio2
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3, heights=c(3,0.5))
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3, heights=c(3,0.5), widths=c(3,1,1))
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3, heights=c(3,0.5), widths=c(3,2,2))
violin.phe <-ggplot(ratio.up%>%filter(survey!="Upwelling"&Season=="Spring"&Difference2=="Era 3 - Era 2"), aes(x=region, y=beta_diff, fill=region)) +
theme_bw() +
facet_wrap(~survey)+
scale_fill_manual(values=col4[3:1], name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~survey) +
ylab("Phyical Conditions Posterior Difference") +
xlab("") +
theme(legend.position="bottom")+
geom_hline(aes(yintercept=0), size=0.3)
violin.phe
violin.bio2 <-ggplot(ratio_index%>%filter(Difference=="2013:2023 - 1989:2012" & Index!="Upwelling"),
aes(x=survey, y=beta_diff, fill=region)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~Difference2) +
ylab("Biological Posterior \n Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) +
theme(legend.position="none")+
theme(legend.position="bottom")
violin.bio2
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3, heights=c(3,0.5), widths=c(3,2,2))
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3, heights=c(3,1,1), widths=c(3,2,2))
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3,nrow=1, heights=c(3,1,1), widths=c(3,2,2))
dev.off()
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3,widths=c(3,2,2))
dev.off()
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3,widths=c(3,2,2))
violin.phe <-ggplot(ratio.up%>%filter(survey!="Upwelling"&Season=="Spring"&Difference2=="Era 3 - Era 2"), aes(x=region, y=beta_diff, fill=region)) +
theme_bw() +
facet_wrap(~survey)+
scale_fill_manual(values=col4[3:1], name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~survey) +
ylab("Phyical Conditions Posterior Difference") +
xlab("") +
theme(legend.position="none")+
geom_hline(aes(yintercept=0), size=0.3)
violin.phe
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3,widths=c(3,2,2))
pdf("Output/ViolinV3.pdf", 11,6)
ggarrange(violin.phe,violin.bio,violin.bio2,labels = c("A", "B", "C"),
font.label = list(size = 12, face="plain"), ncol=3,widths=c(3,2,2))
dev.off()
ggarrange(ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C")),
violin.bio,z.plot,
nrow=2,labels = c("",""))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C")),
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio,z.plot,nrow=2,labels = c("","")))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio,z.plot,nrow=2,labels = c("","")))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio,z.plot,nrow=2,labels = c("",""), heights = c(2,1)))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio,z.plot,nrow=2,labels = c("",""), heights = c(4,1)))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio,z.plot,nrow=2,labels = c("",""), heights = c(3.5,1)))
violin.bio2 <-ggplot(ratio_index%>%filter(Difference=="2013:2023 - 1989:2012" & Index!="Upwelling"),
aes(x=survey, y=beta_diff, fill=region)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~Difference2) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) +
theme(legend.position="bottom")
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(3.5,1)))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(3.75,1)))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(4.5,1)))
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(6,1)))
violin.bio2 <-ggplot(ratio_index%>%filter(Difference=="2013:2023 - 1989:2012" & Index!="Upwelling"),
aes(x=survey, y=beta_diff, fill=region)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~Difference2) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) +
theme(legend.position="bottom",axis.text.x=element_blank())
violin.bio2
violin.bio2 <-ggplot(ratio_index%>%filter(Difference=="2013:2023 - 1989:2012" & Index!="Upwelling"),
aes(x=survey, y=beta_diff, fill=region)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Region")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Index~Difference2) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) +
theme(legend.position="bottom",axis.text.y=element_blank())
violin.bio2
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(6,1)), widths=c(3,2,1.5))
pdf("Output/ViolinV4.pdf", 11,6)
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""), heights = c(6,1)), widths=c(3,2,1.5))
dev.off()
pdf("Output/ViolinV4.pdf", 11,6)
ggarrange(violin.phe,violin.bio, ncol = 3, labels = c("A", "B", "C"),
ggarrange(violin.bio2,z.plot,nrow=2,labels = c("",""),
heights = c(6.25,1)), widths=c(3,2,1.5))
dev.off()
here::i_am("Output/BayesianLinearModels.Rmd")
bakundat <-read.csv(here('data/physical/Bakun/erdUI246hr_d68d_e898_8529.csv'))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI276hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI306hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI336hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI366hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI396hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI426hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI456hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI486hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI516hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI546hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI576hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI606hr_d68d_e898_8529.csv')))%>%
bind_rows(read.csv(here('data/physical/Bakun/erdUI616hr_d68d_e898_8529.csv')))
#converting dates
bakun <- bakundat%>%
add_column('Year'=as.numeric(format(as.Date(bakundat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(bakundat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(bakundat$time),"%d")))
#selecting stations and assigning regions
bakun_region <- bakun%>%
filter(station_id=='36N'|station_id=='39N')%>%
mutate(region="Central CC")%>%
bind_rows(bakun%>%
filter(station_id=='33N'|station_id=='30N'|station_id=='27N'|station_id=='24N')%>%
mutate(region="Southern CC"))%>%
bind_rows(bakun%>%
filter(station_id=='42N'|station_id=='45N'|station_id=='48N')%>%
mutate(region="Northern CC"))%>%
bind_rows(bakun%>%
filter(station_id=='51N'|station_id=='54N'|station_id=='57N'|station_id=='60N')%>%
mutate(region="GoA"))
#selecting months to assign a season and adding lag for nov/dec for winter
bakun_season <- bakun_region%>%
filter(Month==12|Month==11|Month==1|Month==2|Month==3)%>%
mutate(season="Winter")%>%
bind_rows(bakun_region%>%
filter(Month==4|Month==5|Month==6)%>%
mutate(season="Spring"))%>%
bind_rows(bakun_region%>%
filter(Month==7|Month==8)%>%
mutate(season="Summer"))%>%
mutate(Year_lag = if_else(Month == 11|Month ==12, Year+1, Year))
#creating an annual standardization
bakun_summ_annual <- bakun_season%>%
group_by(region, Year_lag) %>%
summarise(annual_mean = mean(na.omit(upwelling_index)))%>%
ungroup()%>%
group_by(region)%>%
mutate(mean = mean(annual_mean), sd=sd(annual_mean))%>%
ungroup()%>%
mutate(stand_bakun_annual = (annual_mean-mean)/sd)%>%
select(Year_lag, region,stand_bakun_annual)
#creating a seasonal standardization
bakun_summ_seasonal <- bakun_season%>%
group_by(region, Year_lag,  season) %>%
summarise(season_mean = mean(na.omit(upwelling_index)))%>%
ungroup()%>%
group_by(region, season)%>%
mutate(mean = mean(season_mean), sd=sd(season_mean))%>%
ungroup()%>%
mutate(stand_bakun_seasonally = (season_mean-mean)/sd)%>%
select(Year_lag, season, region,stand_bakun_seasonally)
#creating a monthly standardization (note this uses YearLag)
bakun_summ<- bakun_season%>%
group_by(Month, region, Year_lag) %>%
summarise(monthly_mean = mean(na.omit(upwelling_index)))%>%
mutate(stand_bakun_monthly = (monthly_mean-mean(na.omit(monthly_mean)))/sd(na.omit(monthly_mean)))%>%
mutate(season=if_else(Month == 11|Month ==12|Month ==1|Month ==2|Month ==3, "Winter",
if_else(Month ==4|Month ==5|Month ==6, "Spring",
if_else(Month ==7|Month ==8, "Summer", "Autumn"))))%>%
left_join(bakun_summ_seasonal)%>%
left_join(bakun_summ_annual)
bakun_time <-bakun_summ%>%
filter(Year_lag>1963 & Year_lag<1989)%>%
mutate(period='1')%>%
bind_rows(bakun_summ%>%
filter(Year_lag>=1989 & Year_lag<2014)%>%
mutate(period='2'))%>%
bind_rows(bakun_summ%>%
filter(Year_lag>2013)%>%
mutate(period='3'))%>%
mutate(era.region = if_else(region == "GoA"&period == 1, 1,
if_else(region == "GoA"&period == 2, 2,
if_else(region == "GoA"&period == 3, 3,
if_else(region == "Northern CC"&period == 1, 4,
if_else(region == "Northern CC"&period == 2, 5,
if_else(region == "Northern CC"&period == 3, 6,
if_else(region == "Central CC"&period == 1, 7,
if_else(region == "Central CC"&period == 2, 8,
if_else(region == "Central CC"&period == 3, 9,
if_else(region == "Southern CC"&period == 1, 10,
if_else(region == "Southern CC"&period == 2, 11,
if_else(region == "Southern CC"&period == 3, 12,
13)))))))))))))
bakun_monthly <- bakun_time%>%
select(Month, region, Year_lag, monthly_mean, stand_bakun_monthly)
bakun_time%>%filter(Year_lag==2023&season=='Spring')
TUMIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_TUMI_33N.csv'))%>%mutate(station_id='33N'))
TUMIdat <- TUMIdat%>%
add_column('Year'=as.numeric(format(as.Date(TUMIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(TUMIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(TUMIdat$time),"%d")))
TUMIdat
corrplot(pivot_wider(TUMIdat, names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
install.packages("corrplot")
library(corrplot)
corrplot(pivot_wider(TUMIdat, names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
corrplot(pivot_wider(TUMIdat%>%select(station_id,tumi), names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
corrplot(pivot_wider(TUMIdat%>%select(station_id,tumi), names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
TUMIdat%>%select(station_id,tumi)
pivot_wider(TUMIdat%>%select(station_id,tumi), names_from = station_id, values_from = tumi)
TUMIdat
TUMIdat%>%select(station_id,tumi, Year)
corrplot(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),
names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
TUMIdat%>%select(station_id,tumi, Year),
TUMIdat%>%select(station_id,tumi, Year),
TUMIdat%>%select(station_id,tumi, Year)
pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)
corrplot(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi), type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
corrplot(cor(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)),
type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
corrplot(cor(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)),
type="upper", order="hclust")
corrplot(cor(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)%>%
select(station_id,tumi)),
type="upper", order="hclust")
pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)%>%
select(station_id,tumi)
pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)%>%
select(!Year)
corrplot(cor(pivot_wider(TUMIdat%>%select(station_id,tumi, Year),names_from = station_id, values_from = tumi)%>%
select(!Year)),
type="upper", order="hclust")
corrplot(cor(pivot_wider(TUMIdat%>%select(as.numeric(station_id),tumi, Year),names_from = station_id, values_from = tumi)%>%
select(!Year)),
type="upper", order="hclust")
corrplot(cor(pivot_wider(TUMIdat%>%select(as.numeric(station_id),tumi, Year),names_from = station_id, values_from = tumi)%>%
select(!Year)),
type="upper", order="hclust")
STIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_33N.csv'))%>%mutate(station_id='33N'))
STIdat <- STIdat%>%
add_column('Year'=as.numeric(format(as.Date(STIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(STIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(STIdat$time),"%d")))
STIdat%>%filter(station_id=='48N')
corrplot(cor(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year)),
type="upper", order="hclust")
STIdat
cor(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year))
pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year)
cor(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year))
(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year)
pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year))
pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year)
LUSIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_33N.csv'))%>%mutate(station_id='33N'))
LUSIdat <- LUSIdat%>%
add_column('Year'=as.numeric(format(as.Date(LUSIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(LUSIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(LUSIdat$time),"%d")))
corrplot(cor(pivot_wider(LUSIdat%>%select(station_id,lusi, Year),names_from = station_id, values_from = lusi)%>%
select(!Year)),
type="upper", order="hclust")
cor(pivot_wider(LUSIdat%>%select(station_id,lusi, Year),names_from = station_id, values_from = lusi)%>%
select(!Year))
cor(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year))
corrplot(cor(na.omit(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year))),
type="upper", order="hclust")
bakunsites <- read.csv(here('data/physical/Bakun/MapLocations2.csv'))%>%
mutate(longitude=longitude)
sites <- st_as_sf(data.frame(bakunsites[,1:2]), coords = c("longitude","latitude"), crs = 4326,
agr = "constant")
#### Making the Map #####
world <- st_as_sf(map('world', plot=F, fill=T)) #base layer for land masses
map<-ggplot() +
geom_polygon(aes(x=c(-105, -113, -127,-105,-105),
y=c(22.1, 22.1,34.4486,34.4486,20)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -127,-130,-110,-110),
y=c(34.4486,34.4486,40.4401,40.4401,34.4486)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -130,-130,-110,-110),
y=c(40.4401,40.4401,49.5,49.5,40.4401)),
fill='white', col='black',alpha=0.6)+
geom_sf(data = world)+
annotate("rect", xmin= -121.5, xmax = -109, ymin = 42, ymax = 48.8,
fill = 'white', col='black',size = 0.8, lwd=0.2) +
geom_sf(fill='grey95') +
geom_sf(data = sites, size = c(rep(2,68+35+16), rep(3,2)),
shape = c(rep(24,68), rep(21,35),rep(23,16),rep(22,2)),
col = c(rep('black',68+35+18)),
fill = c(rep(col3[3],68), rep(col3[7],35),rep(col3[5],16),rep(col3[8],2))) +
coord_sf(xlim = c(-132, -108), ylim = c(22, 50), expand = FALSE)+
ylab(" ")+
xlab(" ")+
annotation_scale()+
annotation_north_arrow(which_north = "true",pad_x = unit(0.25, "in"),
pad_y = unit(0.25, "in"))+
annotate(geom = "text", x = c(-127,-118.5,-129), y = c(37,28,45),
label = str_wrap(c("Central", "Southern","Northern"), width = 20),
fontface = "italic", color = "grey22", size = 3.75, angle=c('290', '311','270')) +
annotate(geom = "text", x = c(-114,-114,-114,-114,-114), y = c(48,46.5,45, 44,43),
label = str_wrap(c("Upwelling Data","CC Regions", "Newport Line","CalCOFI", "RREAS"), width = 22),
color = "grey22", size =3.5) +
annotate(geom = "text", x = c(-120.5,-117), y = c(41,35),
label = str_wrap(c("Cape Mendocino","Point Conception"), width = 20),
fontface = "italic", color = "grey22", size = 3) +
annotate("rect", xmin= -121, xmax = -119, ymin = 46, ymax = 47,
fill = 'white', col='black',size = 0.8, lwd=0.5) +
annotate("line", x= c(-124.1, -124.65), y = c(44.652, 44.652),col=col2[1],size = 0.8, lwd=1) +
annotate("line", x= c(-120.5, -119.5), y = c(45, 45),col=col2[1],size = 0.8, lwd=1) +
theme(panel.background = element_rect(fill = "lightsteelblue2"),
panel.border = element_rect(fill = NA),panel.grid.major = element_line(colour = "transparent"))
map
bakunsites <- read.csv(here('data/physical/Bakun/MapLocations2.csv'))%>%
mutate(longitude=longitude)
sites <- st_as_sf(data.frame(bakunsites[,1:2]), coords = c("longitude","latitude"), crs = 4326,
agr = "constant")
#### Making the Map #####
world <- st_as_sf(map('world', plot=F, fill=T)) #base layer for land masses
2,68+35
68+35
map<-ggplot() +
geom_polygon(aes(x=c(-105, -113, -127,-105,-105),
y=c(22.1, 22.1,34.4486,34.4486,20)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -127,-130,-110,-110),
y=c(34.4486,34.4486,40.4401,40.4401,34.4486)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -130,-130,-110,-110),
y=c(40.4401,40.4401,49.5,49.5,40.4401)),
fill='white', col='black',alpha=0.6)+
geom_sf(data = world)+
annotate("rect", xmin= -121.5, xmax = -109, ymin = 42, ymax = 48.8,
fill = 'white', col='black',size = 0.8, lwd=0.2) +
geom_sf(fill='grey95') +
geom_sf(data = sites, size = c(rep(2,68+35+12), rep(3,2)),
shape = c(rep(24,68), rep(21,35),rep(23,12),rep(22,2)),
col = c(rep('black',68+35+14)),
fill = c(rep(col3[3],68), rep(col3[7],35),rep(col3[5],12),rep(col3[8],2))) +
coord_sf(xlim = c(-132, -108), ylim = c(22, 50), expand = FALSE)+
ylab(" ")+
xlab(" ")+
annotation_scale()+
annotation_north_arrow(which_north = "true",pad_x = unit(0.25, "in"),
pad_y = unit(0.25, "in"))+
annotate(geom = "text", x = c(-127,-118.5,-129), y = c(37,28,45),
label = str_wrap(c("Central", "Southern","Northern"), width = 20),
fontface = "italic", color = "grey22", size = 3.75, angle=c('290', '311','270')) +
annotate(geom = "text", x = c(-114,-114,-114,-114,-114), y = c(48,46.5,45, 44,43),
label = str_wrap(c("Upwelling Data","CC Regions", "Newport Line","CalCOFI", "RREAS"), width = 22),
color = "grey22", size =3.5) +
annotate(geom = "text", x = c(-120.5,-117), y = c(41,35),
label = str_wrap(c("Cape Mendocino","Point Conception"), width = 20),
fontface = "italic", color = "grey22", size = 3) +
annotate("rect", xmin= -121, xmax = -119, ymin = 46, ymax = 47,
fill = 'white', col='black',size = 0.8, lwd=0.5) +
annotate("line", x= c(-124.1, -124.65), y = c(44.652, 44.652),col=col2[1],size = 0.8, lwd=1) +
annotate("line", x= c(-120.5, -119.5), y = c(45, 45),col=col2[1],size = 0.8, lwd=1) +
theme(panel.background = element_rect(fill = "lightsteelblue2"),
panel.border = element_rect(fill = NA),panel.grid.major = element_line(colour = "transparent"))
map
map<-ggplot() +
geom_polygon(aes(x=c(-105, -113, -127,-105,-105),
y=c(22.1, 22.1,34.4486,34.4486,20)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -127,-130,-110,-110),
y=c(34.4486,34.4486,40.4401,40.4401,34.4486)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -130,-130,-110,-110),
y=c(40.4401,40.4401,49.5,49.5,40.4401)),
fill='white', col='black',alpha=0.6)+
geom_sf(data = world)+
annotate("rect", xmin= -121.5, xmax = -109, ymin = 42, ymax = 48.8,
fill = 'white', col='black',size = 0.8, lwd=0.2) +
geom_sf(fill='grey95') +
geom_sf(data = sites, size = c(rep(2,68+35+12), rep(3,2)),
shape = c(rep(24,68), rep(21,35),rep(23,12),rep(22,2)),
col = c(rep('black',68+35+14)),
fill = c(rep(col3[3],68), rep(col3[7],35),rep(col3[5],12),rep(col3[8],2))) +
coord_sf(xlim = c(-132, -108), ylim = c(26, 50), expand = FALSE)+
ylab(" ")+
xlab(" ")+
annotation_scale()+
annotation_north_arrow(which_north = "true",pad_x = unit(0.25, "in"),
pad_y = unit(0.25, "in"))+
annotate(geom = "text", x = c(-127,-118.5,-129), y = c(37,28,45),
label = str_wrap(c("Central", "Southern","Northern"), width = 20),
fontface = "italic", color = "grey22", size = 3.75, angle=c('290', '311','270')) +
annotate(geom = "text", x = c(-114,-114,-114,-114,-114), y = c(48,46.5,45, 44,43),
label = str_wrap(c("Upwelling Data","CC Regions", "Newport Line","CalCOFI", "RREAS"), width = 22),
color = "grey22", size =3.5) +
annotate(geom = "text", x = c(-120.5,-117), y = c(41,35),
label = str_wrap(c("Cape Mendocino","Point Conception"), width = 20),
fontface = "italic", color = "grey22", size = 3) +
annotate("rect", xmin= -121, xmax = -119, ymin = 46, ymax = 47,
fill = 'white', col='black',size = 0.8, lwd=0.5) +
annotate("line", x= c(-124.1, -124.65), y = c(44.652, 44.652),col=col2[1],size = 0.8, lwd=1) +
annotate("line", x= c(-120.5, -119.5), y = c(45, 45),col=col2[1],size = 0.8, lwd=1) +
theme(panel.background = element_rect(fill = "lightsteelblue2"),
panel.border = element_rect(fill = NA),panel.grid.major = element_line(colour = "transparent"))
map
pdf("Output/MapSpace.pdf", 8,5.33)
ggarrange(map, z.plot,  ncol=2,labels = c("A", "B"))
dev.off()
pdf("Output/MapSpace.pdf", 8,5)
ggarrange(map, z.plot,  ncol=2,labels = c("A", "B"))
dev.off()
