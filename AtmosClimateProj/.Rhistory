CALCOFI <-rbind(CALCOFI,scaled.anom)
}
Q
library(ncdf4)
library(chron)
library(tidyverse)
library(kohonen) # fitting
library(aweSOM) # plotting
library(SOMbrero) # plotting
library(paletteer) #colors
library(PNWColors) #more colors
library(here) #navigating folders
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(maps)       #basic mapping functions and some data
library(rstan)
library(mapdata)    #some additional hires data
library(maptools)   #useful tools such as reading shapefiles
library(mapproj)
library(PBSmapping)
library(overlapping)
set.seed(1234)
library(ncdf4)
detach("package:overlapping", unload = TRUE)
##### Writing Bayes DFA model function ####
warmups <- 1000
total_iterations <- 10000
max_treedepth <-  10
n_chains <-  3
n_cores <- 4
adapt_delta <- 0.95
col<-pnw_palette("Sunset2",3,type="discrete")
bayeslinmod <- function(dat, ind,xyz, period) {
N <- length(period)
NP <- as.numeric(length(unique(period)))
P<- as.numeric(as.factor(period))
K <- 1
y <-xyz
x<-dat[ind]
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x,
y=y #response variable
)
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
scaled<-NULL
alphaP<-posterior[1:NP,]%>%
add_column(
period=rep(seq(1,NP),1))
betaP<-posterior[seq(NP+1,NP*2),]%>%
add_column(
period=rep(seq(1,NP),1))
n<- 10000
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled <-rbind(scaled,cbind(tempalpha, tempbeta))
}
scaled.anom<<- scaled%>%
bind_cols(period=rep(rep(seq(1,NP), each = n),1), Index=rep(colnames(dat[ind]), n*NP),
yfirst=rep(min(dat$Year_lag), n*NP),ylast=rep(max(dat$Year_lag), n*NP))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
postplot <- function(dat, param){
ggplot(dat, aes(x = param, fill = as.factor(period), group=as.factor(period))) +
theme_bw() +
facet_wrap(.~Index, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3])) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
}
##### DFA Trend Model Runs ####
climate_dat_cop<-readRDS(here('data/physical/climate_dat_cop.rds'))
dfa<-readRDS(here('data/physical/climate_dat_dfa.rds'))%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))
dat <- dfa%>%dplyr::select(estimate, Year_lag, lower, upper,trend,season)%>%
mutate(Year_lag = Year_lag+1)%>%
rename(estimateoffset1=estimate, loweroffset1=lower, upperoffset1=upper)%>%
left_join(dfa, by=c('trend', 'Year_lag','season'))
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
dplyr::select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)%>%
dplyr::select(Year_lag, seasonal_copepod_northern,seasonal_copepod_southern,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
pivot_longer(!c(Year_lag,  NPH, NPGO,PDO,ONI),
names_to = "trend", values_to = "estimate")%>%
mutate(season="Spring")%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.long<- dat%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, season, estimate,trend,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
distinct()%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.lm<-data%>%
bind_rows(dat.long)%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))%>%
filter(trend!="SEA")%>%
mutate(trend=ifelse(trend=="CALCOFI","CALCOFI (SCC)",
ifelse(trend=="RREAS", "RREAS (CCC)",
ifelse(trend=="seasonal_copepod_southern","Southern Copepod (NCC)","Northern Copepod (NCC)"))))%>%
mutate(trend = fct_relevel(trend, "Northern Copepod (NCC)",
"Southern Copepod (NCC)","RREAS (CCC)","CALCOFI (SCC)"))
survey.lm<-ggplot(data = dat.lm, aes(y = estimate, x =Index_Value,col=as.factor(period))) +
facet_grid(Index_Name~trend, scales='free') +
geom_point(aes(col=as.factor(period))) +
# geom_text(aes(label=Year_lag,col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, col='grey') +
scale_y_continuous(name = "Index of Abundance") +
scale_color_manual(values =  col[1:3], name="Period",labels=c('1967 - 1988', '1989 - 2012','2013 - 2022'))+
theme_bw()+
xlab("Climate Index Value")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Spring")
pdf(file = "Output/Figures/biological.lm.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
survey.lm
dev.off()
data <- dat%>%filter(season=="Spring", trend=="CALCOFI")%>%
distinct()%>%
filter(Year_lag<2023)%>%
add_column(full=1)
CALCOFI <-NULL
##### Writing Bayes DFA model function ####
warmups <- 1000
total_iterations <- 10000
max_treedepth <-  10
n_chains <-  3
n_cores <- 4
adapt_delta <- 0.95
col<-pnw_palette("Sunset2",3,type="discrete")
bayeslinmod <- function(dat, ind,xyz, period) {
N <- length(period)
NP <- as.numeric(length(unique(period)))
P<- as.numeric(as.factor(period))
K <- 1
y <-xyz
x<-dat[ind]
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x,
y=y #response variable
)
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
scaled<-NULL
alphaP<-posterior[1:NP,]%>%
add_column(
period=rep(seq(1,NP),1))
betaP<-posterior[seq(NP+1,NP*2),]%>%
add_column(
period=rep(seq(1,NP),1))
n<- 10000
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled <-rbind(scaled,cbind(tempalpha, tempbeta))
}
scaled.anom<<- scaled%>%
bind_cols(period=rep(rep(seq(1,NP), each = n),1), Index=rep(colnames(dat[ind]), n*NP),
yfirst=rep(min(dat$Year_lag), n*NP),ylast=rep(max(dat$Year_lag), n*NP))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
postplot <- function(dat, param){
ggplot(dat, aes(x = param, fill = as.factor(period), group=as.factor(period))) +
theme_bw() +
facet_wrap(.~Index, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3])) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
}
##### DFA Trend Model Runs ####
climate_dat_cop<-readRDS(here('data/physical/climate_dat_cop.rds'))
dfa<-readRDS(here('data/physical/climate_dat_dfa.rds'))%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))
dat <- dfa%>%dplyr::select(estimate, Year_lag, lower, upper,trend,season)%>%
mutate(Year_lag = Year_lag+1)%>%
rename(estimateoffset1=estimate, loweroffset1=lower, upperoffset1=upper)%>%
left_join(dfa, by=c('trend', 'Year_lag','season'))
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
dplyr::select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)%>%
dplyr::select(Year_lag, seasonal_copepod_northern,seasonal_copepod_southern,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
pivot_longer(!c(Year_lag,  NPH, NPGO,PDO,ONI),
names_to = "trend", values_to = "estimate")%>%
mutate(season="Spring")%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.long<- dat%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, season, estimate,trend,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
distinct()%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.lm<-data%>%
bind_rows(dat.long)%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))%>%
filter(trend!="SEA")%>%
mutate(trend=ifelse(trend=="CALCOFI","CALCOFI (SCC)",
ifelse(trend=="RREAS", "RREAS (CCC)",
ifelse(trend=="seasonal_copepod_southern","Southern Copepod (NCC)","Northern Copepod (NCC)"))))%>%
mutate(trend = fct_relevel(trend, "Northern Copepod (NCC)",
"Southern Copepod (NCC)","RREAS (CCC)","CALCOFI (SCC)"))
survey.lm<-ggplot(data = dat.lm, aes(y = estimate, x =Index_Value,col=as.factor(period))) +
facet_grid(Index_Name~trend, scales='free') +
geom_point(aes(col=as.factor(period))) +
# geom_text(aes(label=Year_lag,col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, col='grey') +
scale_y_continuous(name = "Index of Abundance") +
scale_color_manual(values =  col[1:3], name="Period",labels=c('1967 - 1988', '1989 - 2012','2013 - 2022'))+
theme_bw()+
xlab("Climate Index Value")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Spring")
pdf(file = "Output/Figures/biological.lm.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
survey.lm
dev.off()
#### CALCOFI ####
######Spring #####
data <- dat%>%filter(season=="Spring", trend=="CALCOFI")%>%
distinct()%>%
filter(Year_lag<2023)%>%
add_column(full=1)
CALCOFI <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod(data, columns[i],  data$estimate, data$period)
CALCOFI <-rbind(CALCOFI,scaled.anom)
}
Q
##### Writing Bayes DFA model function ####
warmups <- 1000
total_iterations <- 10000
max_treedepth <-  10
n_chains <-  3
n_cores <- 4
adapt_delta <- 0.95
col<-pnw_palette("Sunset2",3,type="discrete")
bayeslinmod <- function(dat, ind,xyz, period) {
N <- length(period)
NP <- as.numeric(length(unique(period)))
P<- as.numeric(as.factor(period))
K <- 1
y <-xyz
x<-dat[ind]
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x,
y=y #response variable
)
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
scaled<-NULL
alphaP<-posterior[1:NP,]%>%
add_column(
period=rep(seq(1,NP),1))
betaP<-posterior[seq(NP+1,NP*2),]%>%
add_column(
period=rep(seq(1,NP),1))
n<- 10000
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled <-rbind(scaled,cbind(tempalpha, tempbeta))
}
scaled.anom<<- scaled%>%
bind_cols(period=rep(rep(seq(1,NP), each = n),1), Index=rep(colnames(dat[ind]), n*NP),
yfirst=rep(min(dat$Year_lag), n*NP),ylast=rep(max(dat$Year_lag), n*NP))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
postplot <- function(dat, param){
ggplot(dat, aes(x = param, fill = as.factor(period), group=as.factor(period))) +
theme_bw() +
facet_wrap(.~Index, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3])) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
}
##### DFA Trend Model Runs ####
climate_dat_cop<-readRDS(here('data/physical/climate_dat_cop.rds'))
dfa<-readRDS(here('data/physical/climate_dat_dfa.rds'))%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))
dat <- dfa%>%dplyr::select(estimate, Year_lag, lower, upper,trend,season)%>%
mutate(Year_lag = Year_lag+1)%>%
rename(estimateoffset1=estimate, loweroffset1=lower, upperoffset1=upper)%>%
left_join(dfa, by=c('trend', 'Year_lag','season'))
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
dplyr::select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)%>%
dplyr::select(Year_lag, seasonal_copepod_northern,seasonal_copepod_southern,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
pivot_longer(!c(Year_lag,  NPH, NPGO,PDO,ONI),
names_to = "trend", values_to = "estimate")%>%
mutate(season="Spring")%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.long<- dat%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, season, estimate,trend,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
distinct()%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.lm<-data%>%
bind_rows(dat.long)%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))%>%
filter(trend!="SEA")%>%
mutate(trend=ifelse(trend=="CALCOFI","CALCOFI (SCC)",
ifelse(trend=="RREAS", "RREAS (CCC)",
ifelse(trend=="seasonal_copepod_southern","Southern Copepod (NCC)","Northern Copepod (NCC)"))))%>%
mutate(trend = fct_relevel(trend, "Northern Copepod (NCC)",
"Southern Copepod (NCC)","RREAS (CCC)","CALCOFI (SCC)"))
survey.lm<-ggplot(data = dat.lm, aes(y = estimate, x =Index_Value,col=as.factor(period))) +
facet_grid(Index_Name~trend, scales='free') +
geom_point(aes(col=as.factor(period))) +
# geom_text(aes(label=Year_lag,col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, col='grey') +
scale_y_continuous(name = "Index of Abundance") +
scale_color_manual(values =  col[1:3], name="Period",labels=c('1967 - 1988', '1989 - 2012','2013 - 2022'))+
theme_bw()+
xlab("Climate Index Value")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Spring")
pdf(file = "Output/Figures/biological.lm.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
survey.lm
dev.off()
data <- dat%>%filter(season=="Spring", trend=="CALCOFI")%>%
distinct()%>%
filter(Year_lag<2023)%>%
add_column(full=1)
CALCOFI <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod(data, columns[i],  data$estimate, data$period)
CALCOFI <-rbind(CALCOFI,scaled.anom)
}
library(ncdf4)
library(chron)
library(tidyverse)
library(kohonen) # fitting
library(aweSOM) # plotting
library(SOMbrero) # plotting
library(paletteer) #colors
library(PNWColors) #more colors
library(here) #navigating folders
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(maps)       #basic mapping functions and some data
library(rstan)
library(mapdata)    #some additional hires data
library(maptools)   #useful tools such as reading shapefiles
library(mapproj)
library(PBSmapping)
library(bayestestR)
set.seed(1234)
##### DFA Trend Model Runs ####
climate_dat_cop<-readRDS(here('data/physical/climate_dat_cop.rds'))
dfa<-readRDS(here('data/physical/climate_dat_dfa.rds'))%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))
dat <- dfa%>%dplyr::select(estimate, Year_lag, lower, upper,trend,season)%>%
mutate(Year_lag = Year_lag+1)%>%
rename(estimateoffset1=estimate, loweroffset1=lower, upperoffset1=upper)%>%
left_join(dfa, by=c('trend', 'Year_lag','season'))
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
dplyr::select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)%>%
dplyr::select(Year_lag, seasonal_copepod_northern,seasonal_copepod_southern,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
pivot_longer(!c(Year_lag,  NPH, NPGO,PDO,ONI),
names_to = "trend", values_to = "estimate")%>%
mutate(season="Spring")%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.long<- dat%>%filter(season=="Spring")%>%
dplyr::select(Year_lag, season, estimate,trend,
seasonal_NPH,seasonal_NPGO,seasonal_PDO,seasonal_ONI)%>%
rename(NPH=seasonal_NPH,NPGO=seasonal_NPGO,PDO=seasonal_PDO,ONI=seasonal_ONI)%>%
distinct()%>%
pivot_longer(!c(Year_lag, season, estimate,trend),
names_to = "Index_Name", values_to = "Index_Value")
dat.lm<-data%>%
bind_rows(dat.long)%>%
mutate(period=ifelse(Year_lag<1989,1,ifelse(Year_lag>2012,3,2)))%>%
filter(trend!="SEA")%>%
mutate(trend=ifelse(trend=="CALCOFI","CALCOFI (SCC)",
ifelse(trend=="RREAS", "RREAS (CCC)",
ifelse(trend=="seasonal_copepod_southern","Southern Copepod (NCC)","Northern Copepod (NCC)"))))%>%
mutate(trend = fct_relevel(trend, "Northern Copepod (NCC)",
"Southern Copepod (NCC)","RREAS (CCC)","CALCOFI (SCC)"))
survey.lm<-ggplot(data = dat.lm, aes(y = estimate, x =Index_Value,col=as.factor(period))) +
facet_grid(Index_Name~trend, scales='free') +
geom_point(aes(col=as.factor(period))) +
# geom_text(aes(label=Year_lag,col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
geom_smooth(method = "lm", se = FALSE, col='grey') +
scale_y_continuous(name = "Index of Abundance") +
scale_color_manual(values =  col[1:3], name="Period",labels=c('1967 - 1988', '1989 - 2012','2013 - 2022'))+
theme_bw()+
xlab("Climate Index Value")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Spring")
pdf(file = "Output/Figures/biological.lm.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
survey.lm
dev.off()
data <- dat%>%filter(season=="Spring", trend=="CALCOFI")%>%
distinct()%>%
filter(Year_lag<2023)%>%
add_column(full=1)
CALCOFI <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod(data, columns[i],  data$estimate, data$period)
CALCOFI <-rbind(CALCOFI,scaled.anom)
}
