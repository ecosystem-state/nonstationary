refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:2,]%>%
add_column(
period=rep(c("2","3"),1))
betaP<-posterior[3:4,]%>%
add_column(
period=rep(c("2","3"),1))
n<- 10000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anom<<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('2', '3'), each = n),1), Index = rep(colnames(dat[ind]), n*2))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)
northern <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod_cop(data, columns[i],  data$seasonal_copepod_northern)
northern <-rbind(northern,scaled.anom)
}
northern<-northern%>%mutate(survey="Northern Copepod (NCC)",
Index=ifelse(Index=="seasonal_PDO", "PDO", ifelse(Index=="seasonal_NPGO", "NPGO",
ifelse(Index=="seasonal_NPH", "NPH","ONI"))))
northern<-northern%>%mutate(survey="Northern Copepod (NCC)",
Index=ifelse(Index=="seasonal_PDO", "PDO", ifelse(Index=="seasonal_NPGO", "NPGO",
ifelse(Index=="seasonal_NPH", "NPH","ONI"))))
index.names <- unique(northern$Index)
period.names <- unique(northern$period)
overlap.northern <- NA
for(i in 1:4){
temp <- northern%>%filter(Index==index.names[i])%>%select(beta, period)
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%select(beta),temp%>%filter(period==2)%>%select(beta)), period1=c(3), period2=c(1), Index=index.names[i])
temp2<-rbind(ov3)
overlap.northern <-rbind(temp2,overlap.northern)
}
overlap.northern
southern <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod_cop(data, columns[i],  data$seasonal_copepod_southern)
southern <-rbind(southern,scaled.anom)
}
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
southern<-southern%>%mutate(survey="Southern Copepod (NCC)",
Index=ifelse(Index=="seasonal_PDO", "PDO", ifelse(Index=="seasonal_NPGO", "NPGO",
ifelse(Index=="seasonal_NPH", "NPH","ONI"))))
index.names <- unique(southern$Index)
period.names <- unique(southern$period)
overlap.southern <- NA
for(i in 1:4){
temp <- southern%>%filter(Index==index.names[i])%>%select(beta, period)
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%select(beta),temp%>%filter(period==2)%>%select(beta)), period1=c(3), period2=c(1), Index=index.names[i])
temp2<-rbind(ov3)
overlap.southern <-rbind(temp2,overlap.southern)
}
overlap.southern
COP<-southern%>%bind_rows(northern)%>%mutate(yfirst=1989, ylast=2023,period=as.numeric(period))
COP
fulldat<-RREAS%>%bind_rows(CALCOFI, COP)%>%
mutate(survey = fct_relevel(survey, "Northern Copepod (NCC)",
"Southern Copepod (NCC)","RREAS (CCC)","CALCOFI (SCC)"),
period2 = ifelse(period==1,"1967 - 1988", ifelse(period==2, "1989 - 2012", "2013 - 2022")))
full.datslope<- ggplot(fulldat, aes(x = beta, fill = as.factor(period2), group=as.factor(period2))) +
theme_bw() +
facet_grid(Index~survey, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), name="Period") +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
pdf(file = "Output/Figures/biological.slope.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
full.datslope
dev.off()
full.datint<- ggplot(fulldat, aes(x = alpha, fill = as.factor(period2), group=as.factor(period2))) +
theme_bw() +
facet_grid(Index~survey, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), name="Period") +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept",
y = "Posterior density")
pdf(file = "Output/Figures/biological.intercept.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 6)
full.datint
dev.off()
fulloffset<-RREASoffset%>%bind_rows(CALCOFIoffset)%>%
mutate(survey = fct_relevel(survey, "RREAS (CCC)","CALCOFI (SCC)"),
period2 = ifelse(period==1,"1967 - 1988", ifelse(period==2, "1989 - 2012", "2013 - 2022")))
offset.slope<- ggplot(fulloffset, aes(x = beta, fill = as.factor(period2), group=as.factor(period2))) +
theme_bw() +
facet_grid(Index~survey, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), name="Period") +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("1-Year Lag")
pdf(file = "Output/Figures/biologicaloffset.slope.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6)
offset.slope
dev.off()
offset.int<- ggplot(fulloffset, aes(x = alpha, fill = as.factor(period2), group=as.factor(period2))) +
theme_bw() +
facet_grid(Index~survey, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), name="Period") +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept",
y = "Posterior density")+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("1-Year Lag")
pdf(file = "Output/Figures/biologicaloffset.intercept.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6)
offset.int
dev.off()
##### spring #####
climate_dat <-readRDS(here('data/physical/climate_dat_upwelling.rds'))
season <- "Spring"
data<- climate_dat%>%filter(season=="Spring")%>%
#  filter(Year_lag!=2022&Year_lag!=2015)%>%
distinct()
bayeslinmod_up <- function(dat, ind,xyz) {
N <- length(dat$period)
NP <- 12
P<- as.numeric(as.factor(dat$era.region))
K <- 1
y <-xyz
x<-dat[ind]
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
warmups <- 1000
total_iterations <- 10000
max_treedepth <-  10
n_chains <-  3
n_cores <- 4
adapt_delta <- 0.95
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:12,]%>%
add_column(region = rep(c("GoA", "NCC", "CCC","SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 10000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled<<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = n),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = n*3)), Index = rep(colnames(dat[ind]), 12*n))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
up_post<-NULL
ratio.beta<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$beta-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$beta-(northern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$beta-(southern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$beta-(RREAS%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.beta)<- c("alpha", "beta", "survey","Index", "ratio")
ratio.alpha<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$alpha-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$alpha-(northern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$alpha-(southern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$alpha-(RREAS%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.alpha)<- c("alpha", "beta", "survey", "Index","ratio")
# plotting functions
q.50 <- function(x) { return(quantile(x, probs=c(0.25,0.75))) }
q.90 <- function(x) { return(quantile(x, probs=c(0.05,0.95))) }
ratio.alpha<-ratio.alpha%>%
mutate(parameter="Intercept")
ratio.beta<-ratio.beta%>%
mutate(parameter="Slope")
ratio<-ratio.beta%>%#add_row(ratio.alpha)%>%
mutate(Difference="2013:2023 - 1989:2012",Difference2="Era 3 - Era 2")%>%
mutate(survey2 = ifelse(survey=="CALCOFI (SCC)", "CalCOFI",
ifelse(survey=="RREAS (CCC)", "RREAS",
ifelse(survey=="Southern Copepod (NCC)","s. Copepod","n. Copepod"))))%>%
mutate(survey2 = factor(survey2, levels=c(c("CalCOFI","RREAS", "s. Copepod","n. Copepod"))))
col4 <-pnw_palette(name="Starfish",n=4,type="discrete")
cb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
violin <-ggplot(ratio, aes(x=survey2, y=ratio, fill=survey2)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Survey")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Difference2~Index) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) + theme(legend.position = "none")
pdf(file = "Output/Figures/violin.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6)
violin
dev.off()
violin
northern<-northern%>%mutate(survey="Northern Copepod (NCC)",
Index=ifelse(Index=="seasonal_PDO", "PDO", ifelse(Index=="seasonal_NPGO", "NPGO",
ifelse(Index=="seasonal_NPH", "NPH","ONI"))))
index.names <- unique(northern$Index)
period.names <- unique(northern$period)
overlap.northern <- NA
for(i in 1:4){
temp <- northern%>%filter(Index==index.names[i])%>%select(beta, period)
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%select(beta),temp%>%filter(period==2)%>%select(beta)), period1=c(3), period2=c(1), Index=index.names[i])
temp2<-rbind(ov3)
overlap.northern <-rbind(temp2,overlap.northern)
}
overlap.northern
northern
ratio.beta<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$beta-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$beta-(northern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$beta-(southern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$beta-(RREAS%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.beta)<- c("alpha", "beta", "survey","Index", "ratio")
ratio.alpha<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$alpha-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$alpha-(northern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$alpha-(southern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$alpha-(RREAS%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.alpha)<- c("alpha", "beta", "survey", "Index","ratio")
# plotting functions
q.50 <- function(x) { return(quantile(x, probs=c(0.25,0.75))) }
q.90 <- function(x) { return(quantile(x, probs=c(0.05,0.95))) }
ratio.alpha<-ratio.alpha%>%
mutate(parameter="Intercept")
ratio.beta<-ratio.beta%>%
mutate(parameter="Slope")
ratio<-ratio.beta%>%#add_row(ratio.alpha)%>%
mutate(Difference="2013:2023 - 1989:2012",Difference2="Era 3 - Era 2")%>%
mutate(survey2 = ifelse(survey=="CALCOFI (SCC)", "CalCOFI",
ifelse(survey=="RREAS (CCC)", "RREAS",
ifelse(survey=="Southern Copepod (NCC)","s. Copepod","n. Copepod"))))%>%
mutate(survey2 = factor(survey2, levels=c(c("CalCOFI","RREAS", "s. Copepod","n. Copepod"))))
col4 <-pnw_palette(name="Starfish",n=4,type="discrete")
cb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
violin <-ggplot(ratio, aes(x=survey2, y=ratio, fill=survey2)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Survey")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Difference2~Index) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) + theme(legend.position = "none")
violin
#### Copepod Model Runs ####
bayeslinmod_cop <- function(dat, ind,xyz) {
N <- length(dat$period)
NP <- 2
P<- as.numeric(as.factor(dat$period))
K <- 1
y <-xyz
x<-dat[ind]
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:2,]%>%
add_column(
period=rep(c("2","3"),1))
betaP<-posterior[3:4,]%>%
add_column(
period=rep(c("2","3"),1))
n<- 10000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anom<<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('2', '3'), each = n),1), Index = rep(colnames(dat[ind]), n*2))%>%
rename(alpha=tempalpha, beta = tempbeta)
}
climpdo <- climate_dat_cop%>%filter(season=="Spring")%>%
select(Year_lag, region, seasonal_PDO,  seasonal_NPGO,  seasonal_ONI,  seasonal_NPH)%>%
distinct()%>%
filter(Year_lag<2023)
data <- climate_dat_cop%>%filter(season=="Summer")%>%
select(Year_lag, region, seasonal_copepod_northern,
seasonal_copepod_southern)%>%
left_join(climpdo)%>%
distinct()%>%
mutate(period=ifelse(Year_lag<2013,2,3))%>%
filter(Year_lag>1996)
northern <-NULL
columns<-c(which(colnames(data) == "seasonal_PDO"), which(colnames(data) == "seasonal_NPGO"),
which(colnames(data) == "seasonal_NPH"),which(colnames(data) == "seasonal_ONI"))
for(i in 1:length(columns)){
bayeslinmod_cop(data, columns[i],  data$seasonal_copepod_northern)
northern <-rbind(northern,scaled.anom)
}
northern<-northern%>%mutate(survey="Northern Copepod (NCC)",
Index=ifelse(Index=="seasonal_PDO", "PDO", ifelse(Index=="seasonal_NPGO", "NPGO",
ifelse(Index=="seasonal_NPH", "NPH","ONI"))))
northern
ratio.beta<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$beta-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$beta-(northern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$beta-(southern%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$beta-(RREAS%>%filter(period=='2')%>%group_by(Index))$beta)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.beta)<- c("alpha", "beta", "survey","Index", "ratio")
ratio.alpha<-rbind(CALCOFI%>%filter(period=='3')%>%add_column((CALCOFI%>%filter(period=='3')%>%group_by(Index))$alpha-(CALCOFI%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
northern%>%filter(period=='3')%>%add_column((northern%>%filter(period=='3')%>%group_by(Index))$alpha-(northern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
southern%>%filter(period=='3')%>%add_column((southern%>%filter(period=='3')%>%group_by(Index))$alpha-(southern%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`),
RREAS%>%filter(period=='3')%>%add_column((RREAS%>%filter(period=='3')%>%group_by(Index))$alpha-(RREAS%>%filter(period=='2')%>%group_by(Index))$alpha)%>%select(alpha,beta,survey,Index,`... - ...`))
colnames(ratio.alpha)<- c("alpha", "beta", "survey", "Index","ratio")
# plotting functions
q.50 <- function(x) { return(quantile(x, probs=c(0.25,0.75))) }
q.90 <- function(x) { return(quantile(x, probs=c(0.05,0.95))) }
ratio.alpha<-ratio.alpha%>%
mutate(parameter="Intercept")
ratio.beta<-ratio.beta%>%
mutate(parameter="Slope")
ratio<-ratio.beta%>%#add_row(ratio.alpha)%>%
mutate(Difference="2013:2023 - 1989:2012",Difference2="Era 3 - Era 2")%>%
mutate(survey2 = ifelse(survey=="CALCOFI (SCC)", "CalCOFI",
ifelse(survey=="RREAS (CCC)", "RREAS",
ifelse(survey=="Southern Copepod (NCC)","s. Copepod","n. Copepod"))))%>%
mutate(survey2 = factor(survey2, levels=c(c("CalCOFI","RREAS", "s. Copepod","n. Copepod"))))
col4 <-pnw_palette(name="Starfish",n=4,type="discrete")
cb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
violin <-ggplot(ratio, aes(x=survey2, y=ratio, fill=survey2)) +
theme_bw() +
scale_fill_manual(values=c(col4[3:1],col4[1]), name="Survey")+
geom_violin(alpha = 0.75, lwd=0.1, scale='width',trim=TRUE) +
# stat_summary(fun="q.95", colour="black", geom="line", lwd=0.75) +
stat_summary(fun="q.90", colour="black", geom="line", lwd=0.3) +
stat_summary(fun="q.50", colour="black", geom="line", lwd=0.6)+
coord_flip() +
stat_summary(fun="median", colour="black", size=1, geom="point", pch=21) +
ggh4x::facet_grid2(Difference2~Index) +
ylab("Biological Posterior Difference") +
xlab("") +
geom_hline(aes(yintercept=0), size=0.3) + theme(legend.position = "none")
violin
pdf(file = "Output/Figures/violin.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6)
violin
dev.off()
#### Map Data #####
col2<-pnw_palette("Sunset2",4,type="discrete")
col<-pnw_palette("Sunset2",3,type="discrete")
col3<-pnw_palette("Sunset2",8,type="continuous")
col<-pnw_palette("Sunset2",3,type="discrete")
climate_dat <-readRDS(here('data/physical/climate_dat_upwelling.rds'))
climate_dat_cop <-readRDS(here('data/physical/climate_dat_cop.rds'))
bakunsites <- read.csv(here('data/physical/Bakun/MapLocations.csv'))%>%
mutate(longitude=longitude)
sites <- st_as_sf(data.frame(bakunsites[,1:2]), coords = c("longitude","latitude"), crs = 4326,
agr = "constant")
#### Making the Map #####
map<-ggplot() +
geom_polygon(aes(x=c(-105, -113, -127,-105,-105),
y=c(22.1, 22.1,34.4486,34.4486,20)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -127,-130,-110,-110),
y=c(34.4486,34.4486,40.4401,40.4401,34.4486)),
fill='white', col='black',alpha=0.6)+
geom_polygon(aes(x=c(-110, -130,-130,-110,-110),
y=c(40.4401,40.4401,49.5,49.5,40.4401)),
fill='white', col='black',alpha=0.6)+
geom_sf(data = world)+
annotate("rect", xmin= -121.5, xmax = -109, ymin = 42, ymax = 48.8,
fill = 'white', col='black',size = 0.8, lwd=0.2) +
geom_sf(fill='grey95') +
geom_sf(data = sites, size = c(rep(2,68+35+16), rep(3,2)),
shape = c(rep(24,68), rep(21,35),rep(23,16),rep(22,2)),
col = c(rep('black',68+35+18)),
fill = c(rep(col3[3],68), rep(col3[7],35),rep(col3[5],16),rep(col3[8],2))) +
coord_sf(xlim = c(-132, -108), ylim = c(22, 50), expand = FALSE)+
ylab(" ")+
xlab(" ")+
annotation_scale()+
annotation_north_arrow(which_north = "true",pad_x = unit(0.25, "in"),
pad_y = unit(0.25, "in"))+
annotate(geom = "text", x = c(-127,-118.5,-129), y = c(37,28,45),
label = str_wrap(c("Central", "Southern","Northern"), width = 20),
fontface = "italic", color = "grey22", size = 3.75, angle=c('290', '311','270')) +
annotate(geom = "text", x = c(-114,-114,-114,-114,-114), y = c(48,46.5,45, 44,43),
label = str_wrap(c("Bakun Index","CC Regions", "Newport Line","CalCOFI", "RREAS"), width = 22),
color = "grey22", size =3.5) +
annotate(geom = "text", x = c(-117,-113), y = c(41,35),
label = str_wrap(c("Cape Mendocino","Point Conception"), width = 20),
fontface = "italic", color = "grey22", size = 3) +
annotate("rect", xmin= -121, xmax = -119, ymin = 46, ymax = 47,
fill = 'white', col='black',size = 0.8, lwd=0.5) +
annotate("line", x= c(-124.1, -124.65), y = c(44.652, 44.652),col=col2[1],size = 0.8, lwd=1) +
annotate("line", x= c(-120.5, -119.5), y = c(45, 45),col=col2[1],size = 0.8, lwd=1) +
theme(panel.background = element_rect(fill = "lightsteelblue2"),
panel.border = element_rect(fill = NA),panel.grid.major = element_line(colour = "transparent"))
map
#### JUMBO Plot #####
pdf("Output/Fig Jumbo.pdf", 11,8)
ggarrange(ggarrange(map, violin.up, ncol = 2, labels = c("A", "B")),violin,  # Second row with box and dot plots
nrow = 2, heights=c(2,0.75),
labels = c("A", "C")                                        # Labels of the scatter plot
)
dev.off()
ggarrange(ggarrange(map, violin.up, ncol = 2, labels = c("A", "B")),violin,  # Second row with box and dot plots
nrow = 2, heights=c(2,0.75),
labels = c("A", "C")                                        # Labels of the scatter plot
)
ddd <-readRDS('data/physical/correlation_analysis_diff.rds')
ddd <-readRDS('data/physical/correlation_analysis.rds')
remove.packages("rstan")
install.packages("ncdf4")
install.packages("chron")
install.packages("tidyverse")
install.packages("kohonen")
install.packages("aweSOM")
install.packages("SOMbrero")
install.packages("paletteer")
install.packages("PNWColors")
install.packages("here")
install.packages("maps")
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
install.packages("mapdata")
install.packages("maptools")
install.packages("mapproj")
install.packages("PBSmapping")
library(ncdf4)
library(chron)
library(tidyverse)
library(kohonen) # fitting
library(aweSOM) # plotting
library(SOMbrero) # plotting
library(paletteer) #colors
library(PNWColors) #more colors
library(here) #navigating folders
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(maps)       #basic mapping functions and some data
library(mapdata)    #some additional hires data
library(maptools)   #useful tools such as reading shapefiles
library(mapproj)
library(PBSmapping)
set.seed(1234)
# start by loading NE Pacific SST/SLP - this may need to be moved into project if not locally stored
nc <- nc_open(here("som/copernicus_jul10.nc"))
