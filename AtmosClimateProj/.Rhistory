loo.pdo.spring
annual <- climate_dat%>%
select(Year_lag, region, stand_bakun_seasonally,stand_bakun_annual,period, era.region,annual_NPGO)%>%
distinct()%>%
filter(Year_lag<2023)
N <- length(annual$period)
NP <- 12
P<- as.numeric(as.factor(annual$era.region))
P2<- as.numeric(as.factor(annual$era.region))
K <- 1
x <- data.frame(annual$stand_bakun_annual)
y<-annual$annual_NPGO
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.annual <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.annual.era <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit.npgo.annual.era, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:12,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 1000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
winter$region <-factor(winter$region, levels=region.lev)
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 1000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
annual$region <-factor(annual$region, levels=region.lev)
scaled.anomaly$region <-factor(scaled.anomaly$region, levels=region.lev2)
ggplot(data = annual, aes(x = stand_bakun_annual, y = annual_NPGO,col=period)) +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_point(size=0.75,aes(col=period)) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
scale_x_continuous(name = "Upwelling (Bakun 1Ëš 6-hourly)") +
scale_color_manual(values =  col[1:3], labels=c('1967 - 1988', '1989 - 2013', '2014 - 2022'))+
theme_bw()
ggplot(scaled.anomaly, aes(x = beta, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope (scaled anomaly)",
y = "Posterior density")
ggplot(scaled.anomaly, aes(x = alpha, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept (scaled anomaly)",
y = "Posterior density")
winter <- climate_dat%>%filter(season=="Winter")%>%
select(Year_lag, region, season, seasonal_mean, stand_bakun_seasonally,stand_bakun_annual,period, era.region,seasonal_NPGO)%>%
distinct()%>%
filter(Year_lag<2023)
P2<- as.numeric(as.factor(annual$region))
K <- 1
x <- data.frame(annual$stand_bakun_annual)
y<-annual$annual_NPGO
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.annual <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
winter <- climate_dat%>%filter(season=="Winter")%>%
select(Year_lag, region, season, seasonal_mean, stand_bakun_seasonally,stand_bakun_annual,period, era.region,seasonal_NPGO)%>%
distinct()%>%
filter(Year_lag<2023)
N <- length(winter$period)
NP <- 12
P<- as.numeric(as.factor(winter$era.region))
P2<- as.numeric(as.factor(winter$region))
K <- 1
x <- data.frame(winter$stand_bakun_seasonally)
y<-winter$seasonal_NPGO
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
winter <- climate_dat%>%filter(season=="Winter")%>%
select(Year_lag, region, season, seasonal_mean, stand_bakun_seasonally,stand_bakun_annual,period, era.region,seasonal_NPGO)%>%
distinct()%>%
filter(Year_lag<2023)
N <- length(winter$period)
NP <- 12
P<- as.numeric(as.factor(winter$era.region))
P2<- as.numeric(as.factor(winter$region))
K <- 1
x <- data.frame(winter$stand_bakun_seasonally)
y<-winter$seasonal_NPGO
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.winter.era <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.winter <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.winter <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.winter.era <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:12,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 1000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
winter$region <-factor(winter$region, levels=region.lev)
scaled.anomaly$region <-factor(scaled.anomaly$region, levels=region.lev2)
ggplot(data = winter, aes(x = stand_bakun_seasonally, y = seasonal_NPGO,col=period)) +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_point(size=0.75,aes(col=period)) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
scale_x_continuous(name = "Upwelling (Bakun 1Ëš 6-hourly)") +
scale_color_manual(values =  col[1:3], labels=c('1967 - 1988', '1989 - 2013', '2014 - 2022'))+
theme_bw()
ggplot(scaled.anomaly, aes(x = beta, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope (scaled anomaly)",
y = "Posterior density")
posterior<-data.frame(summary(bhfit.npgo.winter.era, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:12,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 1000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
winter$region <-factor(winter$region, levels=region.lev)
scaled.anomaly$region <-factor(scaled.anomaly$region, levels=region.lev2)
ggplot(data = winter, aes(x = stand_bakun_seasonally, y = seasonal_NPGO,col=period)) +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_point(size=0.75,aes(col=period)) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
scale_x_continuous(name = "Upwelling (Bakun 1Ëš 6-hourly)") +
scale_color_manual(values =  col[1:3], labels=c('1967 - 1988', '1989 - 2013', '2014 - 2022'))+
theme_bw()
ggplot(scaled.anomaly, aes(x = beta, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope (scaled anomaly)",
y = "Posterior density")
ggplot(scaled.anomaly, aes(x = alpha, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept (scaled anomaly)",
y = "Posterior density")
spring <- climate_dat%>%filter(season=="Spring")%>%
select(Year_lag, region, season, seasonal_mean, stand_bakun_seasonally,stand_bakun_annual,period, era.region,seasonal_NPGO)%>%
distinct()%>%
filter(Year_lag<2023)
P<- as.numeric(as.factor(spring$era.region))
P2<- as.numeric(as.factor(spring$region))
K <- 1
x <- data.frame(spring$stand_bakun_seasonally)
y<-spring$seasonal_NPGO
bhfit.npgo.spring <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.npgo.spring.era <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit.npgo.spring.era, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
alphaP<-posterior[1:12,]%>%
add_column(region = rep(c("GoA", "NCC", "CCC","SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
betaP<-posterior[13:24,]%>%
add_column(region = rep(c("GoA", "NCC","CCC", "SCC"),each =3),
period=rep(c("1967 - 1988","1989 - 2013","2014 - 2022"),4))
n<- 1000
scaled.anomaly <- NULL
for(i in 1:NP){
tempalpha <- rnorm(n, alphaP$mean[i],alphaP$sd[i])
tempbeta <- rnorm(n, betaP$mean[i],betaP$sd[i])
scaled.anomaly <-rbind(scaled.anomaly,cbind(tempalpha, tempbeta))
}
scaled.anomaly<- scaled.anomaly%>%
bind_cols(period=rep(rep(c('1967 - 1988', '1989 - 2013', '2014 - 2022'), each = 1000),4),
region = rep(rep(c("GoA", "NCC","CCC", "SCC"),each = 3000)))%>%
rename(alpha=tempalpha, beta = tempbeta)
spring$region <-factor(spring$region, levels=region.lev)
scaled.anomaly$region <-factor(scaled.anomaly$region, levels=region.lev2)
ggplot(data = spring, aes(x = stand_bakun_seasonally, y =seasonal_NPGO,col=period)) +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_point(size=0.75,aes(col=period)) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
scale_x_continuous(name = "Upwelling (Bakun 1Ëš 6-hourly)") +
scale_color_manual(values =  col[1:3], labels=c('1967 - 1988', '1989 - 2013', '2014 - 2022'))+
theme_bw()
ggplot(scaled.anomaly, aes(x = beta, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
ggplot(scaled.anomaly, aes(x = alpha, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept (scaled anomaly)",
y = "Posterior density")
npgo.annual.era<-loo(extract_log_lik(bhfit.npgo.annual.era, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.annual<-loo(extract_log_lik(bhfit.npgo.annual, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.annual<-list(npgo.annual.era,npgo.annual)
loo.npgo.annual <- loo_compare(npgo.annual)
loo.npgo.annual
npgo.winter.era<-loo(extract_log_lik(bhfit.npgo.winter.era, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.winter<-loo(extract_log_lik(bhfit.npgo.winter, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.winter<-list(npgo.winter.era,npgo.winter)
loo.npgo.winter <- loo_compare(npgo.winter)
npgo.spring.era<-loo(extract_log_lik(bhfit.npgo.spring.era, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.spring<-loo(extract_log_lik(bhfit.npgo.spring, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.spring.era<-loo(extract_log_lik(bhfit.npgo.spring.era, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.spring<-loo(extract_log_lik(bhfit.npgo.spring, parameter_name = c("alphaP","betaP","sigma"),merge_chains = TRUE))
npgo.spring<-list(npgo.spring.era,npgo.spring)
loo.npgo.spring <- loo_compare(npgo.spring)
loo.npgo.annual
loo.npgo.winter
loo.npgo.spring
ggplot(data = spring, aes(x = stand_bakun_seasonally, y =seasonal_NPGO,col=period)) +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_point(size=0.75,aes(col=period)) +
geom_smooth(method = "lm", se = FALSE, aes(col=as.factor(period))) +
scale_x_continuous(name = "Upwelling (Bakun 1Ëš 6-hourly)") +
scale_color_manual(values =  col[1:3], labels=c('1967 - 1988', '1989 - 2013', '2014 - 2022'))+
theme_bw()
ggplot(scaled.anomaly, aes(x = beta, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Slope",
y = "Posterior density")
ggplot(scaled.anomaly, aes(x = alpha, fill = period)) +
theme_bw() +
facet_wrap(.~region, ncol = 4, scales='free') +
geom_density(alpha = 0.7) +
scale_fill_manual(values = c(col[1], col[2], col[3]), labels=c("1967-1988", "1989-2013", "2014-2022")) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
geom_vline(xintercept = 0, lty = 2) +
labs(x = "Intercept (scaled anomaly)",
y = "Posterior density")
annual <- climate_dat%>%
select(Year_lag, region, season, seasonal_mean, stand_bakun_annual,period, era.region,annual_PDO)%>%
distinct()%>%
filter(Year_lag<2023)
N <- length(annual$period)
NP <- 12
P<- as.numeric(as.factor(annual$era.region))
P2 <-as.numeric(as.factor(annual$region))
K <- 1
x <- data.frame(annual$stand_bakun_annual)
y<-annual$annual_PDO
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P2, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
warmups <- 1000
total_iterations <- 3000
max_treedepth <-  10
n_chains <-  3
n_cores <- 4
adapt_delta <- 0.95
bhfit.pdo.annual  <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
data <- list(N = N, #total number of opservations
NP=NP, #total number of time periods
P = P, #time period pointer vector
K = K,#number of covariates, starting with one but can add for final model structure
x=x, #Upwelling
y=y #response variable
)
bhfit.pdo.annual.era <- stan(
file = here::here("Src/BayesianLinearHierarchicalModels.stan"),
data = data,
chains = n_chains,
warmup = warmups,
iter = total_iterations,
cores = n_cores,
refresh = 250,
control = list(max_treedepth = max_treedepth,
adapt_delta = adapt_delta))
posterior<-data.frame(summary(bhfit.pdo.annual.era, prob=c(0.025, 0.25,0.75, 0.975, 0.1, 0.9))$summary)
loo.npgo.spring
