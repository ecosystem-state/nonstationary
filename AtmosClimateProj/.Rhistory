#get predictor
Index<- matrix(c(data[, 'seasonal_PDO'],data[, 'seasonal_NPGO'],data[, 'seasonal_NPH'],data[, 'seasonal_ONI']),
nrow = 4, ncol=TT)
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c(0.01,0.01)  ## 2x2; diag = (0.1,0.1)
#diag(Q) <- c("q.alpha","q.beta")  ## 2x2; diag = (0.1,0.1)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- scale(Index[i, ]) ## Nx1; predictor variable
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
fit_2 <- MARSS(dat[j,], inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- fit_2$states[1,]
## get estimates of eta
beta_hat <- fit_2$states[2,]
###get alpha se
alpha_se <- fit_2$states.se[1,]
###get alpha se
beta_se <- fit_2$states.se[2,]
temp<-cbind(as.numeric(dat[3,]),as.numeric(beta_hat),as.numeric(alpha_hat),as.numeric(beta_se),as.numeric(alpha_se),
Cop_Name[j],Index_Names[i],season[l])
Bio_Clim_DLM2<-rbind(Bio_Clim_DLM2,temp)
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
}
}
}
colnames(Bio_Clim_DLM2)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Trend","Climate_Index", "season")
Bio_Clim_DLM2<-data.frame(Bio_Clim_DLM2)
Bio_Clim_DLM2<-Bio_Clim_DLM2%>%mutate(offset='0')
Bio_Clim_DLM3<-Bio_Clim_DLM1%>%bind_rows(Bio_Clim_DLM2)
Bio_Clim_DLM3$Trend
unique(Bio_Clim_DLM3$Trend)
levels(Bio_Clim_DLM3$Trend)
factors(Bio_Clim_DLM3$Trend)
factor(Bio_Clim_DLM3$Trend)
unique(factor(Bio_Clim_DLM3$Trend))
colnames(Bio_Clim_DLM2)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Trend","Climate_Index", "season")
Bio_Clim_DLM2<-data.frame(Bio_Clim_DLM2)
Bio_Clim_DLM2<-Bio_Clim_DLM2%>%mutate(offset='0')
Bio_Clim_DLM3<-Bio_Clim_DLM1%>%bind_rows(Bio_Clim_DLM2)
Bio_Clim_DLM3$Trend <- factor(Bio_Clim_DLM3$Trend,
levels = c("Southern Copepods",
"Northern Copepods",
"RREAS", "CALCOFI"))
#####Biology - Phenology Models  ####
climate_dat <-readRDS(here('data/physical/climate_dat_upwelling.rds'))
ddat<- left_join(climate_dat%>%filter(season=="Spring"&region!='GoA'&Year_lag<2023)%>%
mutate(region=ifelse(region=="Northern CC","NCC",
ifelse(region=="Southern CC", "SCC", "CCC")))%>%
select(Year_lag, region, stand_tumi, stand_sti, stand_lusi,),
bind_rows(dd%>%filter(season=="Spring")%>%
select(Year_lag, region,seasonal_copepod_northern, seasonal_copepod_southern)%>%
pivot_longer(!c(Year_lag,region),names_to = 'trend', values_to = 'estimate'),
datx%>%filter(season=="Spring",offset==0, trend!="SEA")%>%select(Year_lag, trend, estimate)%>%
mutate(region=ifelse(trend=='CALCOFI',"SCC","CCC"))))
ddat <- ddat[complete.cases(ddat), ]
Trend_Name2<- c("CALCOFI", "RREAS","seasonal_copepod_southern", "seasonal_copepod_northern")
region2<-c("SCC", "CCC", "NCC","NCC")
Phen_Bio_DLM<-NULL
for(k in 1:4){
data<-ddat%>%
filter(trend==Trend_Name2[k])
## get time indices
years <- data[, 'Year_lag']
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(c(data[, 'estimate'],
data[, 'Year_lag']),
nrow = 2, byrow=TRUE)
#get predictor
Index<- matrix(c(data[, 'stand_tumi'],data[, 'stand_sti'],data[, 'stand_lusi']),
nrow = 3, ncol=TT)
for(j in 1:3){
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c(0.01,0.01)  ## 2x2; diag = (0.1,0.1)
#diag(Q) <- c("q.alpha","q.beta")  ## 2x2; diag = (0.1,0.1)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- scale(Index[j, ]) ## Nx1; predictor variable
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
fit_2 <- MARSS(dat[1,], inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- fit_2$states[1,]
## get estimates of eta
beta_hat <- fit_2$states[2,]
###get alpha se
alpha_se <- fit_2$states.se[1,]
###get alpha se
beta_se <- fit_2$states.se[2,]
temp<-cbind(as.numeric(dat[2,]),as.numeric(beta_hat),as.numeric(alpha_hat),as.numeric(beta_se),as.numeric(alpha_se),
Phen_Names[j],Trend_Name2[k], region2[k])
Phen_Bio_DLM<-rbind(Phen_Bio_DLM,temp)
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
}
}
colnames(Phen_Bio_DLM)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Upwelling_Index","Trend", "region")
Phen_Bio_DLM<-data.frame(Phen_Bio_DLM)
Phen_Bio_DLM<-Phen_Bio_DLM%>%
mutate(Trend=ifelse(Trend=="CALCOFI","CALCOFI",
ifelse(Trend=="RREAS", "RREAS",
ifelse(Trend=="seasonal_copepod_northern", "N. Cop.",
"S. Cop."))))
unique(factor(Phen_Bio_DLM$Trend))
unique(factor(Bio_Clim_DLM3$Trend))
colnames(Bio_Clim_DLM2)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Trend","Climate_Index", "season")
Bio_Clim_DLM2<-data.frame(Bio_Clim_DLM2)
Bio_Clim_DLM2<-Bio_Clim_DLM2%>%mutate(offset='0')
Bio_Clim_DLM3<-Bio_Clim_DLM1%>%bind_rows(Bio_Clim_DLM2)
Bio_Clim_DLM3$Trend <- factor(Bio_Clim_DLM3$Trend,
levels = c("Southern Copepods",
"Northern Copepods",
"RREAS", "CALCOFI"))
#####Biology - Phenology Models  ####
climate_dat <-readRDS(here('data/physical/climate_dat_upwelling.rds'))
ddat<- left_join(climate_dat%>%filter(season=="Spring"&region!='GoA'&Year_lag<2023)%>%
mutate(region=ifelse(region=="Northern CC","NCC",
ifelse(region=="Southern CC", "SCC", "CCC")))%>%
select(Year_lag, region, stand_tumi, stand_sti, stand_lusi,),
bind_rows(dd%>%filter(season=="Spring")%>%
select(Year_lag, region,seasonal_copepod_northern, seasonal_copepod_southern)%>%
pivot_longer(!c(Year_lag,region),names_to = 'trend', values_to = 'estimate'),
datx%>%filter(season=="Spring",offset==0, trend!="SEA")%>%select(Year_lag, trend, estimate)%>%
mutate(region=ifelse(trend=='CALCOFI',"SCC","CCC"))))
ddat <- ddat[complete.cases(ddat), ]
Trend_Name2<- c("CALCOFI", "RREAS","seasonal_copepod_southern", "seasonal_copepod_northern")
region2<-c("SCC", "CCC", "NCC","NCC")
Phen_Bio_DLM<-NULL
for(k in 1:4){
data<-ddat%>%
filter(trend==Trend_Name2[k])
## get time indices
years <- data[, 'Year_lag']
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(c(data[, 'estimate'],
data[, 'Year_lag']),
nrow = 2, byrow=TRUE)
#get predictor
Index<- matrix(c(data[, 'stand_tumi'],data[, 'stand_sti'],data[, 'stand_lusi']),
nrow = 3, ncol=TT)
for(j in 1:3){
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c(0.01,0.01)  ## 2x2; diag = (0.1,0.1)
#diag(Q) <- c("q.alpha","q.beta")  ## 2x2; diag = (0.1,0.1)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- scale(Index[j, ]) ## Nx1; predictor variable
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = R)
## fit univariate DLM
fit_2 <- MARSS(dat[1,], inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- fit_2$states[1,]
## get estimates of eta
beta_hat <- fit_2$states[2,]
###get alpha se
alpha_se <- fit_2$states.se[1,]
###get alpha se
beta_se <- fit_2$states.se[2,]
temp<-cbind(as.numeric(dat[2,]),as.numeric(beta_hat),as.numeric(alpha_hat),as.numeric(beta_se),as.numeric(alpha_se),
Phen_Names[j],Trend_Name2[k], region2[k])
Phen_Bio_DLM<-rbind(Phen_Bio_DLM,temp)
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
}
}
colnames(Phen_Bio_DLM)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Upwelling_Index","Trend", "region")
Phen_Bio_DLM<-data.frame(Phen_Bio_DLM)
Phen_Bio_DLM<-Phen_Bio_DLM%>%
mutate(Trend=ifelse(Trend=="CALCOFI","CALCOFI",
ifelse(Trend=="RREAS", "RREAS",
ifelse(Trend=="seasonal_copepod_northern", "N. Cop.",
"S. Cop."))))
Phen_Bio_DLM$Trend <- factor(Phen_Bio_DLM$Trend,
levels = c("N. Cop.","S. Cop.",
"RREAS", "CALCOFI"))
climate_dat <-readRDS(here('data/physical/climate_dat_upwelling.rds'))
Phen_Clim_DLM<-NULL
Phen_Clim_region<-NULL
for(l in 1: length(season)){
dd<- climate_dat%>%filter(season==season[l]&region!='GoA'&Year_lag<2023)%>%
#  filter(Year_lag!=2022&Year_lag!=2015)%>%
distinct()
for(k in 1:length(region)){
data<-dd%>%
filter(region==region[k])
## get time indices
years <- data[, 'Year_lag']
## number of years of data
TT <- length(years)
## get response variable: logit(survival)
dat <- matrix(c(data[, 'stand_tumi'],
data[, 'stand_lusi'],
data[, 'stand_sti'],
data[, 'Year_lag']),
nrow = 4, byrow=TRUE)
#get predictor
Index<- matrix(c(data[, 'seasonal_PDO'],data[, 'seasonal_NPGO'],data[, 'seasonal_NPH'],data[, 'seasonal_ONI']),
nrow = 4, ncol=TT)
for(i in 1:4){
for(j in 1:3){
U <- matrix(0, nrow = m, ncol = 1)  ## 2x1; both elements = 0
Q <- matrix(list(0), m, m)  ## 2x2; all 0 for now
diag(Q) <- c(0.01,0.01)  ## 2x2; diag = (0.1,0.1)
#diag(Q) <- c("q.alpha","q.beta")  ## 2x2; diag = (0.1,0.1)
## for observation eqn
Z <- array(NA, c(1, m, TT))  ## NxMxT; empty for now
Z[1, 1, ] <- rep(1, TT)  ## Nx1; 1's for intercept
Z[1, 2, ] <- scale(Index[i, ]) ## Nx1; predictor variable
## list of model matrices & vectors
mod_list <- list(B = B, U = U, Q = Q, Z = Z, A = A, R = "diagonal and equal")
## fit univariate DLM
fit_2 <- MARSS(dat[j,], inits = inits_list, model = mod_list)
## get estimates of alpha
alpha_hat <- fit_2$states[1,]
## get estimates of eta
beta_hat <- fit_2$states[2,]
###get alpha se
alpha_se <- fit_2$states.se[1,]
###get alpha se
beta_se <- fit_2$states.se[2,]
temp<-cbind(as.numeric(dat[4,]),as.numeric(beta_hat),as.numeric(alpha_hat),as.numeric(beta_se),as.numeric(alpha_se),
Phen_Names[j],Index_Names[i],region[k],season[l])
Phen_Clim_DLM<-rbind(Phen_Clim_DLM,temp)
## plot the estimated level and drift
par(mfrow = c(2,1), mai = c(0.8, 0.8, 0.2, 0.2), omi = c(0, 0, 0, 0))
## plot alpha
plot.ts(alpha_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(alpha[t]))
## plot eta
plot.ts(beta_hat, las = 1, lwd = 2, col = "blue",
ylab = expression(beta[t]))
}
}
}
}
colnames(Phen_Clim_DLM)<-c("Year", "beta", "alpha","beta_se", "alpha_se","Upwelling_Index","Climate_Index", "region","season")
Phen_Clim_DLM_Region<-data.frame(Phen_Clim_DLM)
Phen_Clim_DLM_Region<-Phen_Clim_DLM_Region%>%
mutate(region=ifelse(region=="Northern CC","NCC",
ifelse(region=="Southern CC", "SCC", "CCC")))
Phen_Clim_DLM_Region$region <- factor(Phen_Clim_DLM_Region$region,
levels = c("NCC","CCC","SCC"))
Phen_Bio_DLM_line<-ggplot(data=Phen_Bio_DLM, aes(y = as.numeric(beta), fill=Trend,x= as.numeric(Year),col = as.factor(Trend))) +
geom_hline(yintercept = 0, lty = 1, col='grey') +
geom_vline(xintercept = 1988, lty = 3) +
geom_vline(xintercept = 2012, lty = 3) +
theme_bw() +
facet_wrap(~Upwelling_Index,  scales='free', nrow=4) +
geom_line(aes(linetype=Trend)) +
scale_fill_manual(values = c(col[1],col[1], col[2], col[3])) +
geom_ribbon(aes(ymin = as.numeric(beta)-as.numeric(beta_se), ymax = as.numeric(beta)+as.numeric(beta_se)), alpha=0.1,colour = NA)+
scale_colour_manual(values = c(col[1],col[1], col[2], col[3])) +
scale_linetype_manual(values = c(2,1,1,1))+
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
guides(fill = FALSE)+
labs(colour="", linetype="", x="Year", y="")+
theme(legend.position="none")
Phen_Bio_DLM_line
Bio_Clim_DLM_line<-ggplot(data=Bio_Clim_DLM3%>%filter(season=="Spring"&offset==0), aes(y = as.numeric(beta), fill=Trend,x= as.numeric(Year),col = as.factor(Trend))) +
geom_hline(yintercept = 0, lty = 1, col='grey') +
geom_vline(xintercept = 1988, lty = 3) +
geom_vline(xintercept = 2012, lty = 3) +
theme_bw() +
facet_wrap(~Climate_Index,  scales='free', nrow=4) +
geom_line(aes(linetype=Trend)) +
scale_fill_manual(values = c(col[1],col[1], col[2], col[3])) +
geom_ribbon(aes(ymin = as.numeric(beta)-as.numeric(beta_se), ymax = as.numeric(beta)+as.numeric(beta_se)), alpha=0.1,colour = NA)+
scale_colour_manual(values = c(col[1],col[1], col[2], col[3])) +
scale_linetype_manual(values = c(2,1,1,1))+
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
guides(fill = FALSE)+
labs(colour="", linetype="", x="Year", y="Slope")+
theme(legend.position="bottom")
Bio_Clim_DLM_line
Phen_Clim_DLM_line<-ggplot(data=Phen_Clim_DLM_Region%>%filter(season=="Spring"), aes(y = as.numeric(beta), fill=region,x= as.numeric(Year),col = as.factor(region))) +
geom_hline(yintercept = 0, lty = 1, col='grey') +
geom_vline(xintercept = 1988, lty = 3) +
geom_vline(xintercept = 2012, lty = 3) +
theme_bw() +
facet_grid(Climate_Index~Upwelling_Index,  scales='free') +
geom_line() +
scale_fill_manual(values = c(col[1],col[2], col[3])) +
geom_ribbon(aes(ymin = as.numeric(beta)-as.numeric(beta_se), ymax = as.numeric(beta)+as.numeric(beta_se)), alpha=0.1,colour = NA)+
scale_colour_manual(values = c(col[1],col[2], col[3])) +
#theme(legend.title = element_blank(), legend.position = 'top', legend.key.size = unit(3, 'mm')) +
guides(fill = FALSE)+
labs(colour="")+
labs(x = "Year",
y = "Slope")+
theme(legend.position="bottom")
Phen_Clim_DLM_line
z.plot <- ggplot()+theme_void()
pdf("Output/DLMbetaspring.pdf", 11,6)
ggarrange(Phen_Clim_DLM_line,Bio_Clim_DLM_line, ncol = 3, labels = c("A", "B", "C"),
ggarrange(Phen_Bio_DLM_line,z.plot,nrow=2,labels = c("",""),
heights = c(6.25,1)), widths=c(3,1.5,1.5))
library(ggpubr)
pdf("Output/DLMbetaspring.pdf", 11,6)
ggarrange(Phen_Clim_DLM_line,Bio_Clim_DLM_line, ncol = 3, labels = c("A", "B", "C"),
ggarrange(Phen_Bio_DLM_line,z.plot,nrow=2,labels = c("",""),
heights = c(6.25,1)), widths=c(3,1.5,1.5))
dev.off()
CALCOFIoffset_full
overlap.CALCOFIoffset <- NA
for(i in 1:4){
temp <- CALCOFIoffset%>%filter(Index==index.names[i])%>%dplyr::select(beta, period)
ov1 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(1), period2=c(2), Index=index.names[i])
ov2 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==3)%>%dplyr::select(beta)), period1=c(1), period2=c(3), Index=index.names[i])
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(3), period2=c(2), Index=index.names[i])
ov4 <- data.frame(ov=overlap(temp%>%filter(period==4)%>%dplyr::select(beta),temp%>%filter(period==3)%>%dplyr::select(beta)), period1=c(4), period2=c(3), Index=index.names[i])
ov5 <- data.frame(ov=overlap(temp%>%filter(period==4)%>%dplyr::select(beta),temp%>%filter(period==1)%>%dplyr::select(beta)), period1=c(4), period2=c(2), Index=index.names[i])
ov6 <- data.frame(ov=overlap(temp%>%filter(period==4)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(4), period2=c(1), Index=index.names[i])
temp2<-rbind(ov1,ov2,ov3, ov4, ov5, ov6)
overlap.CALCOFIoffset <-rbind(temp2,overlap.CALCOFIoffset)
}
#### Full Data Results ####
upwelling
STI<-STI%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
LUSI<-LUSI%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
TUMI<-TUMI%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
STIW<-STIW%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
LUSIW<-LUSIW%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
TUMIW<-TUMIW%>%dplyr::select(alpha,beta,Index,yfirst,ylast,survey,
region,period,Season,lag)%>%mutate(period=as.numeric(as.factor(period)))
Full_Results <- bind_rows(CALCOFI_Woffset,CALCOFI_W,CALCOFIoffset,CALCOFI,
RREAS_Woffset,RREAS_W,RREASoffset,RREAS,
upwelling,
upwelling,TUMI,STI,LUSI,TUMIW,STIW,LUSIW,
northernW%>%mutate(period=ifelse(period==1,2,ifelse(period==2,3,4))),
northern%>%mutate(period=ifelse(period==1,2,ifelse(period==2,3,4))),
southernW%>%mutate(period=ifelse(period==1,2,ifelse(period==2,3,4))),
southern%>%mutate(period=ifelse(period==1,2,ifelse(period==2,3,4))))
overlap.upW<-overlap.upW%>%mutate(region=ifelse(region=='Southern CC','SCC',
ifelse(region=="Northern CC", 'NCC','CCC')),
season="Spring", offset=0, Survey="Upwelling")%>%
dplyr::select(ov,period1,period2,Index,Survey,region,season,offset)
overlap.up<-overlap.up%>%mutate(region=ifelse(region=='Southern CC','SCC',
ifelse(region=="Northern CC", 'NCC','CCC')),
season="Spring", offset=0, Survey="Upwelling")%>%
dplyr::select(ov,period1,period2,Index,Survey,region,season,offset)
overlap_full<-bind_rows(na.omit(overlap.CALCOFI_Woffset),na.omit(overlap.CALCOFI_W),na.omit(overlap.CALCOFIoffset),na.omit(overlap.CALCOFI),
na.omit(overlap.RREAS_Woffset),na.omit(overlap.RREASoffset),na.omit(overlap.RREAS_W),na.omit(overlap.RREAS),
na.omit(overlap.northern),na.omit(overlap.northernW),
na.omit(overlap.southern),na.omit(overlap.southernW),
na.omit(overlap.up), na.omit(overlap.upW))
overlap.northern
overlap.sti
overlap.sti <- NA
for(j in 2:4){
temp1 <- STI%>%filter(region==region.names[j])
for(i in 1:4){
temp <- temp1%>%filter(Index==index.names[i])%>%dplyr::select(beta, period,region)
ov1 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(1), period2=c(2), Index=index.names[i], region=region.names[j])
ov2 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==3)%>%dplyr::select(beta)), period1=c(1), period2=c(3), Index=index.names[i], region=region.names[j])
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(3), period2=c(2), Index=index.names[i], region=region.names[j])
temp2<-rbind(ov1,ov2,ov3)
overlap.sti <-rbind(temp2,overlap.sti)
}
}
overlap.sti<-overlap.sti%>%mutate(survey="STI")
overlap.sti
overlap.lusi <- NA
for(j in 2:4){
temp1 <- LUSI%>%filter(region==region.names[j])
for(i in 1:4){
temp <- temp1%>%filter(Index==index.names[i])%>%dplyr::select(beta, period,region)
ov1 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(1), period2=c(2), Index=index.names[i], region=region.names[j])
ov2 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==3)%>%dplyr::select(beta)), period1=c(1), period2=c(3), Index=index.names[i], region=region.names[j])
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(3), period2=c(2), Index=index.names[i], region=region.names[j])
temp2<-rbind(ov1,ov2,ov3)
overlap.lusi <-rbind(temp2,overlap.lusi)
}
}
overlap.lusi
overlap.lusi<-overlap.lusi%>%mutate(survey="LUSI")
overlap.tumi <- NA
for(j in 2:4){
temp1 <- TUMI%>%filter(region==region.names[j])
for(i in 1:4){
temp <- temp1%>%filter(Index==index.names[i])%>%dplyr::select(beta, period,region)
ov1 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(1), period2=c(2), Index=index.names[i], region=region.names[j])
ov2 <- data.frame(ov=overlap(temp%>%filter(period==1)%>%dplyr::select(beta),temp%>%filter(period==3)%>%dplyr::select(beta)), period1=c(1), period2=c(3), Index=index.names[i], region=region.names[j])
ov3 <- data.frame(ov=overlap(temp%>%filter(period==3)%>%dplyr::select(beta),temp%>%filter(period==2)%>%dplyr::select(beta)), period1=c(3), period2=c(2), Index=index.names[i], region=region.names[j])
temp2<-rbind(ov1,ov2,ov3)
overlap.tumi <-rbind(temp2,overlap.tumi)
}
}
overlap.tumi<-overlap.tumi%>%mutate(survey="TUMI")
overlap.phe<-na.omit(overlap.tumi)%>%
add_row(na.omit(overlap.lusi))%>%
add_row(na.omit(overlap.sti))
overlap.phe
overlap.phe%>%filter(period1==1,period2==3)%>%summarise(mean=mean(ov))
View(overlap.phe)
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2)
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")
mean(overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%select(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Southern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov)))
overlap.phe%>%filter(region=="Southern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Central CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Southern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Central CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Central CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Southern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="PDO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI'|survey=="STI", Index=="ONI"|Index=="NPGO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI"|Index=="NPGO")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Northern CC",period1==3,period2==2, survey=='TUMI', Index=="ONI")%>%summarise(mean=mean(ov))
overlap.phe%>%filter(region=="Central CC",period1==3,period2==2, survey=="STI", Index=="NPH")%>%summarise(mean=mean(ov))
corrplot.mixed(cor(na.omit(scale(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year), center=TRUE, scale=TRUE))),
order="alphabet", title="STI", mar=c(0,0,3,0))
STIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_33N.csv'))%>%mutate(station_id='33N'))
STIdat <- STIdat%>%
add_column('Year'=as.numeric(format(as.Date(STIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(STIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(STIdat$time),"%d")))
STIdat%>%filter(station_id=='48N')
corrplot.mixed(cor(na.omit(scale(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year), center=TRUE, scale=TRUE))),
order="alphabet", title="STI", mar=c(0,0,3,0))
library(corrplot)
STIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_33N.csv'))%>%mutate(station_id='33N'))
STIdat <- STIdat%>%
add_column('Year'=as.numeric(format(as.Date(STIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(STIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(STIdat$time),"%d")))
STIdat%>%filter(station_id=='48N')
corrplot.mixed(cor(na.omit(scale(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year), center=TRUE, scale=TRUE))),
order="alphabet", title="STI", mar=c(0,0,3,0))
dev.off()
dev.off()
dev.off()
STIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_STI_33N.csv'))%>%mutate(station_id='33N'))
STIdat <- STIdat%>%
add_column('Year'=as.numeric(format(as.Date(STIdat$time),"%Y")))%>%
add_column('Month'=as.numeric(format(as.Date(STIdat$time),"%m")))%>%
add_column("Day"=as.numeric(format(as.Date(STIdat$time),"%d")))
STIdat%>%filter(station_id=='48N')
corrplot.mixed(cor(na.omit(scale(pivot_wider(STIdat%>%select(station_id,sti, Year),names_from = station_id, values_from = sti)%>%
select(!Year), center=TRUE, scale=TRUE))),
order="alphabet", title="STI", mar=c(0,0,3,0))
LUSIdat <-read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_48N.csv'))%>%
mutate(station_id='48N')%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_45N.csv'))%>%mutate(station_id='45N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_42N.csv'))%>%mutate(station_id='42N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_39N.csv'))%>%mutate(station_id='39N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_36N.csv'))%>%mutate(station_id='36N'))%>%
bind_rows(read.csv(here('data/physical/Upwelling_Phenology/cciea_OC_LUSI_33N.csv'))%>%mutate(station_id='33N'))
